<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, user-scalable=yes">
    <title>Checkout</title>
    <link rel="icon" type="image/svg+xml" href="/imgs/theme/kaizenicon.svg">
    <link rel="stylesheet" href="/css/main.css?v=3.4">
    <link href="https://cdn.jsdelivr.net/npm/remixicon/fonts/remixicon.css" rel="stylesheet">
    <link href="/css/responsiveUser.css" rel="stylesheet" type="text/css">
    <style>
        .coupon-section-summary {
            border-top: 1px solid #f0f0f0;
            padding-top: 7px;
            margin: 20px 0;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border-radius: 16px;
            padding: 5px;
            box-shadow: 0 2px 12px rgba(0, 0, 0, 0.04);
        }

        .coupon-section-summary .coupon-title {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 16px;
            color: #1a1a1a;
            font-size: 16px;
            font-weight: 700;
        }

        .coupon-section-summary .coupon-title i {
            color: #3BB77E;
            font-size: 22px;
            padding: 8px;
            border-radius: 10px;
        }

        .coupon-count-badge {
            background: linear-gradient(135deg, #3BB77E 0%, #2ea368 100%);
            color: white;
            padding: 5px 8px;
            border-radius: 20px;
            font-size: 10px;
            font-weight: 600;
            letter-spacing: 0.5px;
            margin-left: auto;
        }

        .coupon-form {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .coupon-input-container {
            display: flex;
            gap: 10px;
            align-items: stretch;
        }

        .coupon-input {
            flex: 1;
            padding: 12px 16px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 14px;
            text-transform: uppercase;
            transition: all 0.3s ease;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

        .coupon-input:focus {
            outline: none;
            border-color: #3BB77E;
            box-shadow: 0 0 0 4px rgba(59, 183, 126, 0.1);
            transform: translateY(-1px);
        }

        .apply-coupon-btn {
            padding: 12px 24px;
            background: linear-gradient(135deg, #3BB77E 0%, #2ea368 100%);
            color: white;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 14px;
            white-space: nowrap;
            box-shadow: 0 4px 15px rgba(59, 183, 126, 0.3);
        }

        .apply-coupon-btn:hover {
            background: linear-gradient(135deg, #2ea368 0%, #259a5a 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(59, 183, 126, 0.4);
        }

        .apply-coupon-btn:disabled {
            background: #6c757d;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .coupon-help {
            display: flex;
            align-items: center;
            gap: 6px;
            font-size: 13px;
            color: #666;
            padding: 8px 12px;
            border-radius: 8px;
        }

        .applied-coupon {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 6px;
            background: linear-gradient(135deg, #3BB77E 0%, #2ea368 100%);
            border-radius: 12px;
            color: white;
            position: relative;
            overflow: hidden;
            box-shadow: 0 8px 25px rgba(59, 183, 126, 0.3);
            animation: slideIn 0.4s ease-out;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .applied-coupon::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient(45deg,
                    transparent,
                    transparent 10px,
                    rgba(255, 255, 255, 0.08) 10px,
                    rgba(255, 255, 255, 0.08) 20px);
            pointer-events: none;
        }

        .applied-coupon-info {
            display: flex;
            align-items: center;
            gap: 14px;
            z-index: 1;
            position: relative;
        }

        .coupon-icon.success {
            font-size: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 8px;
            border-radius: 50%;
        }

        .coupon-code {
            padding: 0px 0px;
            border-radius: 6px;
            display: inline-block;
            margin-top: 4px;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

        .discount-amount {
            font-weight: 700;
            font-size: 14px !important;
            margin-top: 6px !important;
        }

        .remove-coupon-btn {
            background: rgba(255, 255, 255, 0.2);
            border: 2px solid rgba(255, 255, 255, 0.3);
            color: white;
            padding: 8px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 1;
            position: relative;
            font-size: 18px;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .remove-coupon-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            border-color: rgba(255, 255, 255, 0.5);
            transform: rotate(90deg) scale(1.1);
        }

        .summary-item.coupon-discount {
            color: #3BB77E;
            background: rgba(59, 183, 126, 0.1);
            padding: 8px 16px;
            border-radius: 10px;
            margin: 8px 0;
            border: 1px solid rgba(59, 183, 126, 0.2);
        }

        .summary-item.coupon-discount .summary-value.discount {
            color: #3BB77E;
            font-weight: 700;
            font-size: 16px;
        }

        .swal-rounded {
            border-radius: 15px !important;
        }

        .coupon-help-text {
            font-size: 13px;
            color: #6c757d;
        }

        .coupon-link {
            color: #007bff;
            text-decoration: none;
            font-weight: 500;
            font-size: 13px;
            transition: color 0.3s ease;
        }

        .coupon-link:hover {
            color: #0056b3;
            text-decoration: underline;
        }

        .payment-option {
            position: relative;
            display: flex;
            align-items: center;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: #ffffff;
        }

        .payment-option:hover {
            border-color: #3399cc;
            background-color: #f8f9fa;
        }

        .payment-option input[type="radio"]:checked+.payment-option-icon+.payment-option-content {
            color: #3399cc;
        }

        .payment-option input[type="radio"]:checked~* {
            border-color: #3399cc;
        }

        .payment-option.insufficient-balance {
            opacity: 0.6;
            cursor: not-allowed;
            background-color: #f8f9fa;
            border-color: #dc3545;
        }

        .payment-option.insufficient-balance input[type="radio"] {
            cursor: not-allowed;
        }

        .payment-option input[type="radio"] {
            margin-right: 15px;
            transform: scale(1.2);
            accent-color: #3399cc;
        }

        .payment-option-icon {
            margin-right: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 8px;
        }

        .payment-option input[type="radio"]:checked+.payment-option-icon {
            background-color: #e3f2fd;
        }

        .payment-icon {
            width: 100%;
            height: 100%;
            object-fit: contain;
            max-width: 100px;
            max-height: 150px;
        }

        .payment-option-content {
            flex: 1;
        }

        .payment-option-title {
            font-size: 16px;
            font-weight: 600;
            color: #333;
            margin-bottom: 4px;
        }

        .payment-option-desc {
            font-size: 14px;
            color: #666;
            line-height: 1.4;
        }

        .wallet-info {
            padding: 5px 0;
        }

        .wallet-balance-label {
            font-size: 13px;
            color: #666;
        }

        .wallet-balance {
            font-weight: 600;
            color: #28a745;
            font-size: 14px;
        }

        .insufficient-balance-msg {
            margin-top: 4px;
            padding: 4px 8px;
            background-color: #f8d7da;
            border-radius: 4px;
            font-size: 12px;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .payment-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .payment-title i {
            color: #3399cc;
            font-size: 20px;
        }

        @media (max-width: 768px) {
            .payment-option {
                padding: 12px;
            }

            .payment-option-icon {
                width: 45px;
                height: 45px;
                margin-right: 12px;
            }

            .payment-icon {
                max-width: 35px;
                max-height: 35px;
            }

            .payment-option input[type="radio"] {
                margin-right: 12px;
            }

            .payment-option-title {
                font-size: 15px;
            }

            .payment-option-desc {
                font-size: 13px;
            }
        }

        .payment-option {
            position: relative;
            display: flex;
            align-items: center;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: #ffffff;
        }

        .payment-option:hover {
            border-color: #3399cc;
            background-color: #f8f9fa;
        }

        .payment-option input[type="radio"]:checked+.payment-option-icon+.payment-option-content {
            color: #3399cc;
        }

        .payment-option input[type="radio"]:checked~* {
            border-color: #3399cc;
        }

        .payment-option.insufficient-balance {
            opacity: 0.6;
            cursor: not-allowed;
            background-color: #f8f9fa;
            border-color: #dc3545;
        }

        .payment-option.insufficient-balance input[type="radio"] {
            cursor: not-allowed;
        }

        .payment-option input[type="radio"] {
            margin-right: 15px;
            transform: scale(1.2);
            accent-color: #3399cc;
        }

        .payment-option input[type="radio"]:checked+.payment-option-icon {
            background-color: #e3f2fd;
            color: #3399cc;
        }

        .payment-option-content {
            flex: 1;
        }

        .payment-option-title {
            font-size: 16px;
            font-weight: 600;
            color: #333;
            margin-bottom: 4px;
        }

        .payment-option-desc {
            font-size: 14px;
            color: #666;
            line-height: 1.4;
        }

        .wallet-balance-label {
            font-size: 13px;
            color: #666;
        }

        .wallet-balance {
            font-weight: 600;
            color: #28a745;
            font-size: 14px;
        }

        .insufficient-balance-msg {
            margin-top: 4px;
            padding: 4px 8px;
            background-color: #f8d7da;
            border-radius: 4px;
            font-size: 12px;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .payment-title {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .payment-title i {
            color: #3399cc;
            font-size: 20px;
        }

        @media (max-width: 768px) {
            .payment-option {
                padding: 12px;
            }

            .payment-option-icon {
                width: 35px;
                height: 35px;
                font-size: 20px;
                margin-right: 12px;
            }

            .payment-option input[type="radio"] {
                margin-right: 12px;
            }

            .payment-option-title {
                font-size: 15px;
            }

            .payment-option-desc {
                font-size: 13px;
            }
        }

        .swal2-popup.swal-responsive {
            color: #333 !important;
            border: 2px solid rgba(0, 0, 0, 0.1) !important;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15) !important;
            backdrop-filter: blur(10px) !important;
        }

        .swal2-title {
            color: #e74c3c !important;
            font-weight: 600 !important;
            text-shadow: none !important;
        }

        .swal2-content {
            color: #666 !important;
        }

        .swal2-confirm {
            background: #3BB77E !important;
            border: none !important;
            border-radius: 8px !important;
            padding: 12px 30px !important;
            font-weight: 600 !important;
            color: white !important;
            box-shadow: 0 4px 15px rgba(59, 183, 126, 0.3) !important;
            transition: all 0.3s ease !important;
        }

        .swal2-confirm:hover {
            background: #2a9d5f !important;
            transform: translateY(-1px) !important;
            box-shadow: 0 6px 20px rgba(59, 183, 126, 0.4) !important;
        }

        .swal2-icon.swal2-error {
            border-color: #e74c3c !important;
            color: #e74c3c !important;
        }

        .swal2-icon.swal2-error .swal2-x-mark {
            color: #e74c3c !important;
        }

        .swal-responsive {
            width: 90% !important;
            max-width: 320px !important;
            padding: 1.2rem !important;
            border-radius: 10px;
            font-size: 0.95rem;
        }

        .checkout-container {
            background: white;
            min-height: 100vh;
            padding: 40px 0;
        }

        .checkout-header {
            text-align: left;
            margin-bottom: 30px;
            border-bottom: 2px solid #f1f3f4;
            padding-bottom: 20px;
            max-width: 1400px;
            margin-left: auto;
            margin-right: auto;
            padding-left: 20px;
            padding-right: 20px;
        }

        .checkout-title {
            font-size: 1.4rem;
            font-weight: 600;
            color: #1a1a1a;
            margin-bottom: 8px;
        }

        .checkout-subtitle {
            color: #666;
            font-size: 0.85rem;
        }

        .checkout-content {
            display: grid;
            grid-template-columns: 1fr 380px;
            gap: 30px;
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .main-content {
            display: flex;
            flex-direction: column;
            gap: 25px;
        }

        .section {
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid #e9ecef;
        }

        .section-title {
            font-size: 1.4rem;
            font-weight: 600;
            color: #1a1a1a;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .main-content {
            background: white;
            border-radius: 16px;
            box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
            overflow: hidden;
        }

        .profile-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 30px;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .profile-header h3 {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-size: 1.5rem;
            font-weight: 600;
            color: #253D4E;
            margin: 0;
        }

        .profile-header h3 i {
            font-size: 1.75rem;
        }

        .btn-add-address {
            display: flex;
            align-items: center;
            background: #2ea368;
            color: white;
            border: none;
            padding: 6px 12px;
            border-radius: 6px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            cursor: pointer;
            font-size: 13px;
        }

        .btn-add-address:hover {
            background: #059669;
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 6px 20px rgba(59, 183, 126, 0.4);
        }

        .btn-add-address i {
            margin-right: 6px;
            color: white;
            font-size: 1.3rem;
        }

        .btn-add-address:active {
            transform: translateY(0);
        }

        .profile-body {
            padding: 2rem;
        }

        .addresses-grid {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .address-card {
            background: white;
            border: 2px solid #f0f0f0;
            border-radius: 12px;
            padding: 1rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: space-between;
            min-height: 80px;
        }

        .address-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            width: 4px;
            background: linear-gradient(180deg, #3BB77E, #2ea368);
            transform: scaleY(0);
            transition: transform 0.3s ease;
        }

        .address-card:hover::before {
            transform: scaleY(1);
        }

        .address-card:hover {
            border-color: #3BB77E;
            box-shadow: 0 4px 15px rgba(59, 183, 126, 0.15);
            transform: translateX(4px);
        }

        .address-main-content {
            display: flex;
            align-items: center;
            gap: 1.5rem;
            flex: 1;
        }

        .address-type {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            min-width: 120px;
        }

        .address-type i {
            color: #3BB77E;
            font-size: 1.4rem;
            background: rgba(59, 183, 126, 0.1);
            padding: 0.5rem;
            border-radius: 10px;
        }

        .address-type-text {
            font-weight: 600;
            color: #253D4E;
            text-transform: capitalize;
            font-size: 0.9rem;
        }

        .default-badge {
            background: linear-gradient(135deg, #3BB77E 0%, #2ea368 100%);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.65rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-left: 0.5rem;
        }

        .address-details {
            flex: 1;
            min-width: 0;
        }

        .address-details h4 {
            color: #253D4E;
            margin-bottom: 0.25rem;
            font-size: 0.9rem;
            font-weight: 600;
        }

        .address-text {
            color: #666;
            font-size: 0.8rem;
            line-height: 1.4;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .address-phone {
            color: #666;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.8rem;
            margin-top: 0.25rem;
        }

        .address-phone i {
            color: #3BB77E;
            font-size: 1rem;
        }

        .address-actions {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .btn-set-default {
            background: transparent;
            border: 2px solid #3BB77E;
            color: #3BB77E;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-size: 0.85rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            white-space: nowrap;
        }

        .btn-set-default:hover {
            background: #3BB77E;
            color: white;
            transform: translateY(-1px);
        }

        .btn-set-default:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }

        .address-action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .btn-action {
            background: white;
            border: 2px solid #f0f0f0;
            width: 36px;
            height: 36px;
            border-radius: 8px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            font-size: 1rem;
        }

        .btn-action.edit {
            color: #3BB77E;
        }

        .btn-action.edit:hover {
            background: #3BB77E;
            color: white;
            border-color: #3BB77E;
            transform: scale(1.05);
        }

        .btn-action.delete {
            color: #ff4757;
        }

        .btn-action.delete:hover {
            background: #ff4757;
            color: white;
            border-color: #ff4757;
            transform: scale(1.05);
        }

        /* No addresses state */
        .no-addresses {
            text-align: center;
            padding: 4rem 2rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border-radius: 20px;
            border: 2px dashed #e0e0e0;
        }

        .no-addresses-icon {
            font-size: 5rem;
            color: #d0d0d0;
            margin-bottom: 1.5rem;
        }

        .no-addresses h4 {
            color: #253D4E;
            margin-bottom: 0.75rem;
            font-size: 1.5rem;
            font-weight: 600;
        }

        .no-addresses p {
            color: #666;
            margin-bottom: 2rem;
            font-size: 1.1rem;
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
        }

        .btn-add-first-address {
            background: linear-gradient(135deg, #3BB77E 0%, #2ea368 100%);
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.75rem;
            box-shadow: 0 4px 15px rgba(59, 183, 126, 0.3);
        }

        .btn-add-first-address:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(59, 183, 126, 0.4);
        }

        /* Order Items Section */
        .order-item {
            display: grid;
            grid-template-columns: 80px 1fr auto;
            gap: 15px;
            padding: 20px;
            background: #fff;
            border-radius: 12px;
            margin-bottom: 15px;
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .order-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .order-item-image {
            position: relative;
            overflow: hidden;
            border-radius: 10px;
            aspect-ratio: 1;
        }

        .order-item-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .order-item-details {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .order-item-name {
            font-size: 1.1rem;
            font-weight: 600;
            color: #1a1a1a;
            margin-bottom: 5px;
        }

        .order-item-quantity {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 10px;
        }

        .order-item-price {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .original-price {
            color: #999;
            text-decoration: line-through;
            font-size: 0.9rem;
        }

        .current-price {
            color: #1a1a1a;
            font-size: 1.1rem;
            font-weight: 600;
        }

        .discount-badge {
            background: #088178;
            color: white;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 500;
        }

        .order-item-total {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            justify-content: center;
        }

        .item-subtotal {
            font-size: 1.2rem;
            font-weight: 700;
            color: #1a1a1a;
        }

        .payment-title i {
            color: #ff1744;
            font-size: 1.5rem;
        }

        .payment-option {
            background: white;
            border: 2px solid #f0f0f0;
            border-radius: 12px;
            padding: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .payment-option:hover {
            border-color: #ff1744;
            box-shadow: 0 4px 15px rgba(255, 23, 68, 0.1);
        }

        .payment-option input[type="radio"] {
            width: 20px;
            height: 20px;
            margin: 0;
            accent-color: #ff1744;
        }

        .payment-option-content {
            flex: 1;
        }

        .order-summary {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid #e9ecef;
            height: fit-content;
            position: sticky;
            top: 20px;
        }

        .progress-steps {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 25px;
            gap: 6px;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 15px;
        }

        .step {
            display: flex;
            align-items: center;
            color: #666;
            font-weight: 500;
            padding: 6px 10px;
            border-radius: 15px;
            transition: all 0.3s ease;
            font-size: 0.75rem;
        }

        .step-icon {
            width: 18px;
            height: 18px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 6px;
            font-size: 0.65rem;
        }

        .step.active {
            background: linear-gradient(135deg, #ff1744 0%, #f50057 50%, #c51162 100%);
            color: white;
        }

        .step.active .step-icon {
            background: rgba(255, 255, 255, 0.2);
            color: white;
        }

        .step.completed {
            background: #28a745;
            color: white;
        }

        .step.completed .step-icon {
            background: rgba(255, 255, 255, 0.2);
            color: white;
        }

        .step.inactive {
            background: #e9ecef;
            color: #666;
        }

        .step.inactive .step-icon {
            background: #dee2e6;
            color: #6c757d;
        }

        .step-arrow {
            color: #ccc;
            margin: 0 4px;
            font-size: 0.8rem;
        }

        .summary-title {
            font-size: 1.6rem;
            font-weight: 600;
            color: #1a1a1a;
            margin-bottom: 20px;
            text-align: center;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            padding: 12px 0;
            border-bottom: 1px solid #f1f3f4;
            color: #666;
        }

        .summary-item:last-of-type {
            border-bottom: none;
        }

        .summary-value {
            font-weight: 600;
        }

        .summary-value.free {
            color: #28a745;
        }

        .summary-value.discount {
            color: #088178;
        }

        .total-section {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 20px;
            margin: 20px 0;
            border: 2px solid #e9ecef;
        }

        .total-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .total-label {
            font-size: 1rem;
            color: #666;
        }

        .total-amount {
            font-size: 1.8rem;
            font-weight: 700;
            color: #1a1a1a;
        }

        .place-order-btn {
            width: 100%;
            padding: 10px;
            background: linear-gradient(135deg, #ff1744 0%, #f50057 50%, #c51162 100%);
            color: white;
            border: none;
            border-radius: 22px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 2rem;
        }

        .place-order-btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(255, 23, 68, 0.3);
        }

        .place-order-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        @media (max-width: 1024px) {
            .checkout-content {
                grid-template-columns: 1fr 340px;
            }
        }

        @media (max-width: 768px) {
            .address-card {
                flex-direction: column;
                align-items: stretch;
                gap: 1rem;
                padding: 1.25rem;
            }

            .address-main-content {
                flex-direction: column;
                gap: 1rem;
            }

            .address-type {
                min-width: auto;
            }

            .address-actions {
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
            }

            .btn-add-address {
                justify-content: center;
            }

            .checkout-content {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .checkout-container {
                padding: 20px 0;
            }

            .checkout-title {
                font-size: 1.3rem;
            }

            .order-item {
                grid-template-columns: 70px 1fr;
                gap: 12px;
            }

            .order-item-total {
                grid-column: 1 / -1;
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                margin-top: 10px;
            }

            .order-summary {
                position: relative;
                top: auto;
            }

            .payment-options {
                gap: 12px;
            }

            .payment-option {
                padding: 15px;
            }
        }

        @media (max-width: 480px) {
            .checkout-content {
                padding: 0 15px;
            }

            .section {
                padding: 20px;
            }

            .order-item {
                padding: 15px;
            }

            .order-summary {
                padding: 20px;
            }

            .payment-methods {
                padding: 20px;
            }
        }

        .coupon-section-summary .coupon-title {
            display: flex;
            align-items: center;
            gap: 1px;
            margin-bottom: 12px;
            color: #333;
            font-size: 14px;
            font-weight: 600;
        }

        .coupon-section-summary .coupon-title i {
            color: #28a745;
            font-size: 16px;
        }

        .coupon-form {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .coupon-input-container {
            display: flex;
            gap: 8px;
            align-items: stretch;
        }

        .coupon-input {
            flex: 1;
            padding: 8px 12px;
            border: 1px solid #e0e0e0;
            border-radius: 6px;
            font-size: 11px;
            text-transform: uppercase;
            transition: all 0.3s ease;
        }

        .coupon-input:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.1);
        }

        .apply-coupon-btn {
            padding: 8px 16px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 6px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 12px;
            white-space: nowrap;
        }

        .apply-coupon-btn:hover {
            background: #0056b3;
        }

        .apply-coupon-btn:disabled {
            background: #6c757d;
            cursor: not-allowed;
        }

        .applied-coupon {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 4px;
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            border-radius: 8px;
            color: white;
            position: relative;
            overflow: hidden;

        }

        .applied-coupon::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: repeating-linear-gradient(45deg,
                    transparent,
                    transparent 8px,
                    rgba(255, 255, 255, 0.1) 8px,
                    rgba(255, 255, 255, 0.1) 16px);
            pointer-events: none;
        }

        .applied-coupon-info {
            display: flex;
            align-items: center;
            gap: 8px;
            z-index: 1;
            position: relative;
        }

        .coupon-icon {
            font-size: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .coupon-details h4 {
            margin: 8px 0 4px -20px;
            font-size: 12px;
            font-weight: 600;
        }

        .coupon-details p {
            margin: -3px;
            font-size: 10px;
            opacity: 0.9;
        }

        .discount-amount {
            font-weight: 600;
            font-size: 11px !important;
        }

        .remove-coupon-btn {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            padding: 6px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 1;
            position: relative;
            font-size: 12px;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .remove-coupon-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: scale(1.1);
        }

        .summary-item.coupon-discount {
            color: #28a745;
        }

        .summary-item.coupon-discount .summary-value.discount {
            color: #28a745;
            font-weight: 600;
        }

        .coupon-loading {
            opacity: 0.6;
            pointer-events: none;
        }

        .coupon-loading .apply-coupon-btn {
            background: #6c757d;
        }

        @media (max-width: 768px) {
            .coupon-input-container {
                flex-direction: column;
                gap: 6px;
            }

            .apply-coupon-btn {
                width: 100%;
            }

            .applied-coupon {
                flex-direction: column;
                gap: 8px;
                text-align: center;
            }

            .applied-coupon-info {
                flex-direction: column;
                text-align: center;
                gap: 6px;
            }
        }
    </style>
</head>

<body>

    <header class="header-area header-style-1 header-height-2">
        <div class="header-top header-top-ptb-1 d-none d-lg-block">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-xl-3 col-lg-4">
                        <div class="header-info">
                        </div>
                    </div>
                    <div class="col-xl-6 col-lg-4">
                        <div class="text-center">
                        </div>
                    </div>
                    <div class="col-xl-3 col-lg-4">
                        <div class="header-info header-info-right">
                            <% if (user) { %>
                                <div class="dropdown">
                                    <a href="#" class="sign-in-link">
                                        <%= user.name %>
                                    </a>
                                    <div class="dropdown-content">
                                        <a href="/userProfile">Profile</a>
                                        <a href="/logout">Logout</a>
                                    </div>
                                </div>
                                <% } else { %>
                                    <ul>
                                        <li>
                                            <i class="fi-rs-user"></i>
                                            <a href="/login">Log In</a>
                                        </li>
                                    </ul>
                                    <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="header-middle header-middle-ptb-1 d-none d-lg-block">
            <div class="container">
                <div class="header-wrap">
                    <div class="logo logo-width-1">
                        <a href="#"><img src="/imgs/theme/kaizenlogoo.svg" alt="logo"></a>
                    </div>
                    <div class="header-right">
                        <div class="search-style-2"></div>
                        <div class="header-action-right">
                            <div class="header-action-2">
                                <div class="header-action-icon-2">
                                    <a href="/wishlist">
                                        <img class="svgInject" alt="Evara" src="/imgs/theme/icons/icon-heart.svg">
                                        <span id="wishlistItemCount" class="pro-count blue">
                                            <%= wishlistItemCount %>
                                        </span>
                                    </a>
                                </div>
                                <div class="header-action-icon-2">
                                    <a class="mini-cart-icon" href="/cart">
                                        <img alt="Evara" src="/imgs/theme/icons/icon-cart.svg">
                                        <span id="cartItemCount" class="pro-count blue">
                                            <%= cartItemCount %>
                                        </span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="header-bottom header-bottom-bg-color sticky-bar">
            <div class="container">
                <div class="header-wrap header-space-between position-relative">
                    <div class="logo logo-width-1 d-block d-lg-none">
                        <a href="#"><img src="/imgs/theme/kaizenlogoo.svg" alt="logo"></a>
                    </div>
                    <div class="header-nav d-none d-lg-flex">

                        <div class="main-menu main-menu-padding-1 main-menu-lh-2 d-none d-lg-block">
                            <nav>
                                <ul>
                                    <li><a href="/">Home</a></li>
                                    <li><a class='active' href="/shop">Shop</a></li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                    <div class="header-action-right d-block d-lg-none">
                        <div class="header-action-2">
                            <div class="header-action-icon-2">
                                <a href="/wishlist">
                                    <img alt="Evara" src="/imgs/theme/icons/icon-heart.svg">
                                    <span id="wishlistItemCount" class="pro-count blue">
                                        <%= wishlistItemCount %>
                                    </span>
                                </a>
                            </div>
                            <div class="header-action-icon-2">
                                <a class="mini-cart-icon" href="/cart">
                                    <img alt="Evara" src="/imgs/theme/icons/icon-cart.svg">
                                    <span id="cartItemCount" class="pro-count blue">
                                        <%= cartItemCount %>
                                    </span>
                                </a>
                            </div>
                            <div class="header-action-icon-2 d-block d-lg-none">
                                <div class="burger-icon burger-icon-white">
                                    <span class="burger-icon-top"></span>
                                    <span class="burger-icon-mid"></span>
                                    <span class="burger-icon-bottom"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="mobile-header-active mobile-header-wrapper-style">
        <div class="mobile-header-wrapper-inner">
            <div class="mobile-header-top">
                <div class="mobile-header-logo">
                    <a href="#"><img src="/imgs/theme/kaizenlogoo.svg" alt="logo"></a>
                </div>
                <div class="mobile-menu-close close-style-wrap close-style-position-inherit">
                    <button class="close-style search-close">
                        <i class="icon-top"></i>
                        <i class="icon-bottom"></i>
                    </button>
                </div>
            </div>
            <div class="mobile-header-content-area">
                <div class="mobile-menu-wrap mobile-header-border">
                    <nav>
                        <ul class="mobile-menu">
                            <li><a href="/">Home</a></li>
                            <li><a href="/shop">Shop</a></li>
                        </ul>
                    </nav>
                </div>

                <div class="mobile-header-info-wrap mobile-header-border">
                    <% if (user) { %>
                        <div class="single-mobile-header-info mt-10 mb-10">
                            <i class="fi-rs-user"></i>
                            <strong>
                                <%= user.name %>
                            </strong>
                        </div>

                        <div class="single-mobile-header-info mobile-profile-dropdown">
                            <div class="mobile-profile-toggle" onclick="toggleMobileProfileDropdown()">
                                <i class="fi-rs-settings-sliders"></i> My Profile
                                <i class="fi-rs-angle-small-down dropdown-arrow"></i>
                            </div>
                            <ul class="mobile-profile-submenu">
                                <li><a href="/userProfile"><i class="fi-rs-user"></i> My Profile</a></li>
                                <li><a href="/orders"><i class="fi-rs-shopping-bag"></i> My Orders</a></li>
                                <li><a href="/wallet"><i class="fi-rs-credit-card"></i> My Wallet</a></li>
                                <li><a href="/profile/coupons"><i class="fi-rs-ticket"></i> My Coupons</a></li>
                                <li><a href="/profile/addresses"><i class="fi-rs-marker"></i> My Address</a></li>
                                <li><a href="/profile/security"><i class="fi-rs-lock"></i> Privacy Settings</a></li>
                            </ul>
                        </div>

                        <div class="single-mobile-header-info">
                            <a href="/logout"><i class="fi-rs-sign-out"></i> Logout</a>
                        </div>
                        <% } else { %>
                            <div class="single-mobile-header-info">
                                <a href="/login"><i class="fi-rs-user"></i> Log In</a>
                            </div>
                            <div class="single-mobile-header-info">
                                <a href="/signup"><i class="fi-rs-user-add"></i> Sign Up</a>
                            </div>
                            <% } %>
                </div>
            </div>
        </div>
    </div>

    <div class="anime-elements">
        <div class="sakura">🌸</div>
        <div class="sakura">🌸</div>
        <div class="sakura">🌸</div>
        <div class="sakura">🌸</div>
        <div class="sakura">🌸</div>
        <div class="sakura">🌸</div>
        <div class="sakura">🌸</div>
        <div class="sakura">🌸</div>
        <div class="kanji-float">化</div>
        <div class="kanji-float">革</div>
    </div>

    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="#" rel="nofollow">Home</a>
                <span></span> Shop
                <span></span> Product
                <span></span> Cart
                <span></span> Checkout
            </div>
        </div>
    </div>

    <div class="checkout-container">
        <div class="checkout-content">
            <div class="main-content">
                <div class="section">
                    <div class="checkout-header">
                        <h1 class="checkout-title">Complete Your Order</h1>
                        <p class="checkout-subtitle">Review your delivery details and finalize your purchase</p>
                    </div>

                    <div class="profile-header">
                        <h3><i class="ri-map-pin-fill"></i> Delivery Address</h3>
                        <a href="/profile/add-address?from=checkout" class="btn-add-address">
                            <i class="ri-add-line"></i> Add New Address
                        </a>
                    </div>

                    <div class="addresses-section">
                        <% if (addresses.length===0) { %>
                            <div class="no-addresses">
                                <div class="no-addresses-icon">
                                    <i class="ri-map-pin-line"></i>
                                </div>
                                <h4>No addresses added yet</h4>
                                <p>Add your first address to make checkout faster and easier.</p>
                            </div>
                            <% } else { %>
                                <div class="addresses-grid">
                                    <% addresses.forEach(address=> { %>
                                        <div class="address-card" data-address-id="<%= address._id %>"
                                            data-default="<%= address.isDefault %>">

                                            <div class="address-main-content">
                                                <div class="address-type">
                                                    <i
                                                        class="ri-<%= address.addressType === 'home' ? 'home-fill' : address.addressType === 'work' ? 'building-fill' : 'map-pin-fill' %>"></i>
                                                    <div>
                                                        <span class="address-type-text">
                                                            <%= address.addressType.charAt(0).toUpperCase() +
                                                                address.addressType.slice(1) %>
                                                        </span>
                                                        <% if (address.isDefault) { %>
                                                            <span class="default-badge">Default</span>
                                                            <% } %>
                                                    </div>
                                                </div>

                                                <div class="address-details">
                                                    <h4>
                                                        <%= address.userName %>
                                                    </h4>
                                                    <p class="address-text">
                                                        <%= address.houseNo %>, <%= address.locality %>,
                                                                <% if (address.landmark) { %>
                                                                    <%= address.landmark %>,
                                                                        <% } %>
                                                                            <%= address.city %>, <%= address.state %> -
                                                                                    <%= address.pincode %>
                                                    </p>
                                                    <p class="address-phone">
                                                        <i class="ri-phone-line"></i> +91 <%= address.phoneNumber %>
                                                    </p>
                                                    <% if (address.altPhoneNumber) { %>
                                                        <p class="address-phone">
                                                            <i class="ri-phone-line"></i> Alt: +91 <%=
                                                                address.altPhoneNumber %>
                                                        </p>
                                                        <% } %>
                                                </div>
                                            </div>

                                            <div class="address-actions">
                                                <% if (!address.isDefault) { %>
                                                    <button class="btn-set-default"
                                                        onclick="setDefaultAddress('<%= address._id %>')">
                                                        Set as Default
                                                    </button>
                                                    <% } %>
                                                        <div class="address-action-buttons">
                                                            <button class="btn-action edit"
                                                                onclick="editAddress('<%= address._id %>')"
                                                                title="Edit">
                                                                <i class="ri-edit-line"></i>
                                                            </button>
                                                            <button class="btn-action delete"
                                                                onclick="deleteAddress('<%= address._id %>')"
                                                                title="Delete">
                                                                <i class="ri-delete-bin-line"></i>
                                                            </button>
                                                        </div>
                                            </div>
                                        </div>
                                        <% }) %>
                                </div>
                                <% } %>
                    </div>
                </div>

                <div class="section">
                    <h2 class="section-title">Order Items (<%= cart.items.length %> items)</h2>
                    <% if (!cart.items || cart.items.length===0) { %>
                        <div class="empty-cart">
                            <div class="empty-cart-icon">🛒</div>
                            <h3>No items to checkout</h3>
                            <p>Your cart is empty. Add some items to continue.</p>
                        </div>
                        <% } else { %>
                            <% cart.items.forEach(item=> { %>
                                <div class="order-item">
                                    <div class="order-item-image">
                                        <img src="<%= item.image %>" alt="<%= item.name %>"
                                            onerror="this.src='/imgs/theme/placeholder.jpg'">
                                    </div>
                                    <div class="order-item-details">
                                        <div class="order-item-name">
                                            <%= item.name %>
                                        </div>
                                        <div class="order-item-quantity">
                                            Quantity: <%= item.quantity %>
                                                <% if (item.size) { %>
                                                    | Size: <%= item.size %>
                                                        <% } %>
                                        </div>

                                        <div class="order-item-price">
                                            <% if (item.hasOffer) { %>
                                                <span class="original-price">₹<%= item.originalPrice %></span>
                                                <span class="discount-badge">
                                                    <%= item.discountPercentage %>% OFF
                                                </span>
                                                <span class="current-price">₹<%= item.price %></span>
                                                <% } else { %>
                                                    <% if (item.originalPrice && item.originalPrice> item.price) { %>
                                                        <span class="original-price">₹<%= item.originalPrice %></span>
                                                        <span class="discount-badge">
                                                            <%= Math.round(((item.originalPrice -
                                                                item.price)/item.originalPrice)*100) %>% OFF
                                                        </span>
                                                        <% } %>
                                                            <span class="current-price">₹<%= item.price %></span>
                                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="order-item-total">
                                        <div class="item-subtotal">₹<%= item.subtotal %>
                                        </div>
                                    </div>
                                </div>
                                <% }) %>
                                    <% } %>
                </div>

                <div class="section payment-methods">
                    <h2 class="payment-title">
                        <i class="ri-secure-payment-line"></i>
                        Choose Payment Method
                    </h2>

                    <div class="payment-options">
                        <% ['razorpay','wallet','cod'].forEach(method=> { %>
                            <label class="payment-option">
                                <input type="radio" name="payment" value="<%= method %>" <%=method==='cod' ? 'checked'
                                    : '' %>>
                                <div class="payment-option-icon">
                                    <% if (method==='razorpay' ) { %>
                                        <img src="/assets2/imgs/theme/razorpay-icon.webp" alt="Razorpay"
                                            class="payment-icon">
                                        <% } %>
                                            <% if (method==='wallet' ) { %>
                                                <img src="/assets2/imgs/theme/wallet-icon.png" alt="Wallet"
                                                    class="payment-icon">
                                                <% } %>
                                                    <% if (method==='cod' ) { %>
                                                        <img src="/assets2/imgs/theme/money-notes-receiving-dollar-color-icon.png"
                                                            alt="Cash on Delivery" class="payment-icon">
                                                        <% } %>
                                </div>
                                <div class="payment-option-content">
                                    <div class="payment-option-title">
                                        <%= method==='razorpay' ? 'Razorpay' : method==='wallet' ? 'Wallet'
                                            : 'Cash on Delivery' %>
                                    </div>
                                    <div class="payment-option-desc">
                                        <% if (method==='razorpay' ) { %>
                                            Pay securely with netbanking
                                            <% } else if (method==='wallet' ) { %>
                                                Use your digital wallet balance
                                                <div class="wallet-info">
                                                    <span class="wallet-balance-label">Available Balance: </span>
                                                    <span class="wallet-balance">₹<%= (walletBalance || 0).toFixed(2) %>
                                                    </span>
                                                </div>
                                                <% } else { %>
                                                    Pay when your order arrives
                                                    <% } %>
                                    </div>
                                </div>
                            </label>
                            <% }) %>
                    </div>

                    <div style="display: none;">
                        <span class="order-total">₹<%= (typeof appliedCoupon !=='undefined' && appliedCoupon) ?
                                appliedCoupon.finalTotal.toFixed(2) : cart.total.toFixed(2) %></span>
                    </div>
                </div>
            </div>

            <div class="order-summary">
                <div class="progress-steps">
                    <div class="step completed">
                        <div class="step-icon">✓</div>
                        Cart
                    </div>
                    <div class="step-arrow">›</div>
                    <div class="step active">
                        <div class="step-icon">2</div>
                        Payment
                    </div>
                </div>
                <h2 class="summary-title">Order Summary</h2>
                <% if (cart.items && cart.items.length> 0) { %>
                    <% cart.items.forEach(item=> { %>
                        <div class="summary-item">
                            <span>
                                <%= item.quantity %>× <%= item.name.length> 20 ? item.name.substring(0,20)+'...' :
                                        item.name %>
                                        <% if (item.hasOffer) { %>
                                            <small class="offer-indicator">(<%= item.discountPercentage %>% off)</small>
                                            <% } %>
                            </span>
                            <span class="summary-value">₹<%= item.subtotal %></span>
                        </div>
                        <% }) %>

                            <div class="summary-item">
                                <span>Subtotal</span>
                                <span class="summary-value" id="summarySubtotal">₹<%= cart.rawTotal || cart.total %>
                                </span>
                            </div>

                            <% if (typeof appliedCoupon !=='undefined' && appliedCoupon) { %>
                                <div class="summary-item coupon-discount" id="couponDiscountRow">
                                    <span>Coupon Discount (<%= appliedCoupon.couponCode %>)</span>
                                    <span class="summary-value discount" id="couponDiscountAmount">-₹<%=
                                            appliedCoupon.discount %></span>
                                </div>
                                <% } else { %>
                                    <div class="summary-item coupon-discount" id="couponDiscountRow"
                                        style="display: none;">
                                        <span>Coupon Discount (<span id="appliedCouponCode"></span>)</span>
                                        <span class="summary-value discount" id="couponDiscountAmount">-₹0</span>
                                    </div>
                                    <% } %>

                                        <div class="summary-item">
                                            <span>Delivery Charges</span>
                                            <span class="summary-value free">Free</span>
                                        </div>
                                        <div class="summary-item">
                                            <span>Platform Fee</span>
                                            <span class="summary-value">₹0</span>
                                        </div>

                                        <div class="coupon-section-summary">
                                            <h3 class="coupon-title">
                                                <i class="ri-coupon-3-line"></i>
                                                Apply Coupon
                                                <% if (availableCouponsCount> 0) { %>
                                                    <span class="coupon-count-badge">
                                                        <%= availableCouponsCount %> available
                                                    </span>
                                                    <% } %>
                                            </h3>

                                            <div class="coupon-container" id="couponContainer">
                                                <% if (typeof appliedCoupon !=='undefined' && appliedCoupon) { %>
                                                    <div class="applied-coupon" id="appliedCouponDisplay">
                                                        <div class="applied-coupon-info">
                                                            <div class="coupon-icon success">
                                                                <i class="ri-checkbox-circle-fill"></i>
                                                            </div>
                                                            <div class="coupon-details">
                                                                <h4>
                                                                    <%= appliedCoupon.couponName %>
                                                                </h4>
                                                                <p class="coupon-code">Code: <%=
                                                                        appliedCoupon.couponCode %>
                                                                </p>
                                                                <p class="discount-amount">You saved ₹<%=
                                                                        appliedCoupon.discount %>
                                                                </p>
                                                            </div>
                                                        </div>
                                                        <button class="remove-coupon-btn" onclick="removeCoupon()">
                                                            <i class="ri-close-line"></i>
                                                        </button>
                                                    </div>
                                                    <% } else { %>
                                                        <div class="coupon-form" id="couponForm">
                                                            <div class="coupon-input-container">
                                                                <input type="text" id="couponCodeInput"
                                                                    placeholder="Enter coupon code" class="coupon-input"
                                                                    maxlength="20">
                                                                <button type="button" class="apply-coupon-btn"
                                                                    id="applyCouponBtn"
                                                                    onclick="applyCoupon()">Apply</button>
                                                            </div>
                                                            <div class="coupon-help">
                                                                <span>Don't have a coupon? <a href="/profile/coupons"
                                                                        class="coupon-link">View available
                                                                        coupons</a></span>
                                                            </div>
                                                            <div class="coupon-message-text" id="couponMessage"
                                                                style="display: none; color: #dc3545; font-size: 12px; margin-top: 6px;">
                                                            </div>
                                                        </div>
                                                        <% } %>
                                            </div>
                                        </div>

                                        <div class="total-section">
                                            <div class="total-row">
                                                <div class="total-label">Total Amount</div>
                                                <div class="total-amount" id="finalTotalAmount">
                                                    ₹<%= (typeof appliedCoupon !=='undefined' && appliedCoupon) ?
                                                        appliedCoupon.finalTotal : cart.total %>
                                                </div>
                                            </div>
                                        </div>

                                        <button type="button" class="place-order-btn" id="placeOrderBtn"
                                            onclick="placeOrder()" <%=(!addresses || addresses.length===0) ? 'disabled'
                                            : '' %>>
                                            <%= (!addresses || addresses.length===0) ? 'Add Address to Continue'
                                                : 'Place Order' %>
                                        </button>
                                        <% } else { %>
                                            <div style="text-align:center;padding:40px 20px;color:#666;">
                                                <div style="font-size:3rem;margin-bottom:15px;opacity:0.5;">📋</div>
                                                <p>No items to checkout</p>
                                            </div>
                                            <% } %>
            </div>
        </div>
    </div>

    <footer class="main">
        <section class="newsletter p-30 text-white wow fadeIn animated">
            <div class="floating-elements">
                <div class="floating-element">桜</div>
                <div class="floating-element">桜</div>
                <div class="floating-element">⚡</div>
                <div class="floating-element">🌸</div>
            </div>
        </section>

        <section class="section-padding footer-mid">
            <div class="container pt-15 pb-20">
                <div class="row">
                    <div class="col-lg-4 col-md-6">
                        <div class="footer-logo mb-20">
                            <a><img src="/imgs/theme/kaizenlogoo.svg" alt="Kaizen Logo"></a>
                        </div>
                        <div class="widget-about font-md mb-md-5 mb-lg-0">
                            <div class="brand-story wow fadeIn animated">
                                <p class="text-grey-4 mb-15">
                                    <strong>Kaizen</strong> (改善) — Japanese philosophy of continuous improvement and
                                    evolution. We embody this principle in every stitch, every design, and every
                                    collection.
                                </p>
                                <p class="text-grey-4 mb-20">
                                    From streetwear roots to evolving aesthetics, Kaizen represents the relentless
                                    pursuit
                                    of perfection. We don't just create clothing; we evolve culture, one piece at a
                                    time.
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-2 col-md-3">
                        <h5 class="widget-title wow fadeIn animated">Quick Links</h5>
                        <ul class="footer-list wow fadeIn animated mb-sm-5 mb-md-0">
                            <li><a href="/">Home</a></li>
                            <li><a href="/shop">Shop</a></li>
                            <li><a href="/cart">Cart</a></li>
                            <li><a href="/wishlist">Wishlist</a></li>
                        </ul>
                    </div>

                    <div class="col-lg-2 col-md-3">
                        <h5 class="widget-title wow fadeIn animated">My Account</h5>
                        <ul class="footer-list wow fadeIn animated">
                            <li><a href="/userProfile">My Profile</a></li>
                            <li><a href="/profile/coupons">View Coupons</a></li>
                            <li><a href="/wallet">Open Wallet</a></li>
                            <li><a href="/orders">Track My Order</a></li>
                            <li><a href="/profile/addresses">View Address</a></li>
                        </ul>
                    </div>
                    <div class="col-lg-4 col-md-6">
                        <h5 class="widget-title wow fadeIn animated">Contact</h5>
                        <div class="widget-about font-md mb-md-5 mb-lg-0 wow fadeIn animated">
                            <p class="wow fadeIn animated">
                                <strong>Address:</strong> Kannur, Kerala
                            </p>
                            <p class="wow fadeIn animated">
                                <strong>Phone:</strong> +91 9000 123 456 / +91 484 555 0123
                            </p>
                            <p class="wow fadeIn animated">
                                <strong>Hours:</strong> 10:00 - 21:00, Mon - Sun
                            </p>
                        </div>

                        <div class="payment-section mt-30">
                            <p class="mb-15 fw-600 text-grey-4 wow fadeIn animated">Secured Payment Methods</p>
                            <div class="payment-methods wow fadeIn animated d-flex align-items-center gap-3">
                                <div class="payment-method-item">
                                    <img src="/imgs/theme/COD-icon.png" alt="COD" style="height: 55px;">
                                </div>
                                <div class="payment-method-item">
                                    <img src="/imgs/theme/wallet-icon.png" alt="Wallet" style="height: 60px;">
                                </div>
                                <div class="payment-method-item">
                                    <img src="/imgs/theme/razorpay-icon.png" alt="Razorpay" style="height: 55px;">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <div class="container pb-20 wow fadeIn animated">
            <div class="row">
                <div class="col-12">
                    <hr class="footer-divider mb-3">
                </div>
                <div class="col-lg-6 col-md-6">
                    <p class="text-md-start text-center font-sm text-muted mb-0">
                        &copy; <span id="year"></span> <strong class="text-brand">Kaizen Street</strong>. All rights
                        reserved.
                    </p>
                </div>
                <div class="col-lg-6 col-md-6">
                    <p class="text-md-end text-center font-sm text-muted mb-0">
                        Designed with <span class="text-brand">❤</span>
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <script src="/js/wishlist-count-updater.js"></script>
    <script src="/js/cart-count-updater.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="/js/responsiveUser.js"></script>
   <script src="https://checkout.razorpay.com/v1/checkout.js"></script>


    <script>
        document.getElementById('year').textContent = new Date().getFullYear();

        function toggleMobileProfileDropdown() {
            const dropdown = document.querySelector('.mobile-profile-dropdown');
            dropdown.classList.toggle('active');
        }

        document.addEventListener('click', function (event) {
            const dropdown = document.querySelector('.mobile-profile-dropdown');
            if (dropdown && !dropdown.contains(event.target)) {
                dropdown.classList.remove('active');
            }
        });
    </script>

    <script>
        const section = document.querySelector('.newsletter');
        window.addEventListener('scroll', () => {
            const rect = section.getBoundingClientRect();
            const topOfPage = window.pageYOffset;
            const topOfSec = rect.top + topOfPage;
            const scrolled = topOfPage - topOfSec;
            const distance = Math.max(scrolled, 0);
            const yPos = distance * -0.5;
        });
    </script>


    <script>

        let originalTotal = 0;
        let currentDiscount = 0;
        let appliedCouponData = null;

        document.addEventListener('DOMContentLoaded', function () {
            const totalElement = document.querySelector('.order-total');
            if (totalElement) {
                originalTotal = parseFloat(totalElement.textContent.replace('₹', '').replace(',', ''));
            }

            const couponInput = document.getElementById('couponCodeInput');
            if (couponInput) {
                couponInput.addEventListener('input', function (e) {
                    e.target.value = e.target.value.toUpperCase();
                });

                couponInput.addEventListener('keypress', function (e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        applyCoupon();
                    }
                });
            }
        });

        async function applyCoupon() {
            const couponInput = document.getElementById('couponCodeInput');
            const applyBtn = document.getElementById('applyCouponBtn');
            const messageDiv = document.getElementById('couponMessage');

            if (!couponInput || !applyBtn) return;

            const couponCode = couponInput.value.trim();

            if (!couponCode) {
                showCouponMessage('Please enter a coupon code', 'error');
                return;
            }

            setLoadingState(true);

            try {
                const response = await fetch('/checkout/apply-coupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ couponCode })
                });

                const data = await response.json();

                if (response.ok && data.success) {
                    appliedCouponData = data.data;
                    showAppliedCoupon(data.data);
                    updateOrderSummary(data.data);
                    showCouponMessage(`Coupon applied! You saved ₹${data.data.discount}`, 'success');

                    setTimeout(() => {
                        document.getElementById('couponMessage').style.display = 'none';
                    }, 3000);
                } else {
                    showCouponMessage(data.message || 'Failed to apply coupon', 'error');
                }
            } catch (error) {
                console.error('Error applying coupon:', error);
                showCouponMessage('Something went wrong. Please try again.', 'error');
            } finally {
                setLoadingState(false);
            }
        }

        async function removeCoupon() {
            try {
                const response = await fetch('/checkout/remove-coupon', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                const data = await response.json();

                if (response.ok && data.success) {
                    appliedCouponData = null;
                    hideAppliedCoupon();
                    resetOrderSummary(data.data);
                    showCouponMessage('Coupon removed successfully', 'success');

                    setTimeout(() => {
                        document.getElementById('couponMessage').style.display = 'none';
                    }, 2000);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to remove coupon'
                    });
                }
            } catch (error) {
                console.error('Error removing coupon:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong. Please try again.'
                });
            }
        }

        function showAppliedCoupon(couponData) {
            const couponContainer = document.getElementById('couponContainer');
            const couponForm = document.getElementById('couponForm');

            if (couponForm) couponForm.style.display = 'none';

            const appliedCouponHTML = `
                        <div class="applied-coupon" id="appliedCouponDisplay">
                            <div class="applied-coupon-info">
                                <div class="coupon-icon success">
                                    <i class="ri-checkbox-circle-fill"></i>
                                </div>
                                <div class="coupon-details">
                                    <h4>${couponData.couponName}</h4>
                                    <p class="coupon-code">Code: ${couponData.couponCode}</p>
                                    <p class="discount-amount">You saved ₹${couponData.discount}</p>
                                </div>
                            </div>
                            <button class="remove-coupon-btn" onclick="removeCoupon()">
                                <i class="ri-close-line"></i>
                            </button>
                        </div>
                    `;

            couponContainer.innerHTML = appliedCouponHTML;
        }

        function hideAppliedCoupon() {
            const couponContainer = document.getElementById('couponContainer');

            const couponFormHTML = `
                <div class="coupon-form" id="couponForm">
                    <div class="coupon-input-container">
                        <input type="text" 
                               id="couponCodeInput" 
                               placeholder="Enter coupon code" 
                               class="coupon-input"
                               maxlength="20">
                        <button type="button" 
                                class="apply-coupon-btn" 
                                id="applyCouponBtn"
                                onclick="applyCoupon()">
                            Apply
                        </button>
                    </div>
                    <div class="coupon-help">
                        <span>Don't have a coupon? <a href="/profile/coupons" class="coupon-link">View available coupons</a></span>
                    </div>
                    <div class="coupon-message-text" id="couponMessage" style="display: none; color: #dc3545; font-size: 12px; margin-top: 6px;"></div>
                </div>
            `;

            couponContainer.innerHTML = couponFormHTML;

            const couponInput = document.getElementById('couponCodeInput');
            if (couponInput) {
                couponInput.addEventListener('input', function (e) {
                    e.target.value = e.target.value.toUpperCase();
                });

                couponInput.addEventListener('keypress', function (e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        applyCoupon();
                    }
                });
            }
        }

        function updateOrderSummary(couponData) {
            const subtotalElement = document.getElementById('summarySubtotal');
            if (subtotalElement) {
                subtotalElement.textContent = `₹${couponData.originalTotal}`;
            }

            const discountRow = document.getElementById('couponDiscountRow');
            const discountAmount = document.getElementById('couponDiscountAmount');
            const couponCodeSpan = document.getElementById('appliedCouponCode');

            if (discountRow) {
                discountRow.style.display = 'flex';
                if (discountAmount) discountAmount.textContent = `-₹${couponData.discount}`;
                if (couponCodeSpan) couponCodeSpan.textContent = couponData.couponCode;
            }

            const finalTotalElement = document.getElementById('finalTotalAmount');
            const orderTotalElement = document.querySelector('.order-total');

            if (finalTotalElement) finalTotalElement.textContent = `₹${couponData.finalTotal}`;
            if (orderTotalElement) orderTotalElement.textContent = `₹${couponData.finalTotal.toFixed(2)}`;

            currentDiscount = couponData.discount;

            checkWalletBalance();
        }

        function resetOrderSummary(resetData) {
            const subtotalElement = document.getElementById('summarySubtotal');
            if (subtotalElement) {
                subtotalElement.textContent = `₹${resetData.originalTotal}`;
            }

            const discountRow = document.getElementById('couponDiscountRow');
            if (discountRow) {
                discountRow.style.display = 'none';
            }

            const finalTotalElement = document.getElementById('finalTotalAmount');
            const orderTotalElement = document.querySelector('.order-total');

            if (finalTotalElement) finalTotalElement.textContent = `₹${resetData.finalTotal}`;
            if (orderTotalElement) orderTotalElement.textContent = `₹${resetData.finalTotal.toFixed(2)}`;

            currentDiscount = 0;

            checkWalletBalance();
        }


        function showCouponMessage(message, type) {
            const messageDiv = document.getElementById('couponMessage');
            if (!messageDiv) return;

            messageDiv.textContent = message;
            messageDiv.style.color = type === 'error' ? '#dc3545' : '#28a745';
            messageDiv.style.display = 'block';
        }

        function setLoadingState(loading) {
            const applyBtn = document.getElementById('applyCouponBtn');
            const couponInput = document.getElementById('couponCodeInput');
            const couponForm = document.getElementById('couponForm');

            if (loading) {
                if (applyBtn) {
                    applyBtn.disabled = true;
                    applyBtn.textContent = 'Applying...';
                }
                if (couponInput) couponInput.disabled = true;
                if (couponForm) couponForm.classList.add('coupon-loading');
            } else {
                if (applyBtn) {
                    applyBtn.disabled = false;
                    applyBtn.textContent = 'Apply';
                }
                if (couponInput) couponInput.disabled = false;
                if (couponForm) couponForm.classList.remove('coupon-loading');
            }
        }


        async function placeOrder() {
            const swalOpts = {
                customClass: { popup: 'swal-responsive' }
            };

            const paymentInput = document.querySelector('input[name="payment"]:checked');
            if (!paymentInput) {
                return Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please select a payment method.',
                    ...swalOpts
                });
            }
            const paymentMethod = paymentInput.value;

            const defaultCard = document.querySelector('.address-card[data-default="true"]');
            if (!defaultCard) {
                return Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please set a default address to continue.',
                    ...swalOpts
                });
            }
            const addressId = defaultCard.dataset.addressId;

            const finalTotalElement = document.getElementById('finalTotalAmount');
            const currentTotal = finalTotalElement ?
                parseFloat(finalTotalElement.textContent.replace('₹', '').replace(',', '')) :
                parseFloat(document.querySelector('.order-total')?.textContent?.replace('₹', '').replace(',', '') || 0);

            const orderData = {
                addressId,
                paymentMethod
            };

            if (appliedCouponData) {
                orderData.couponData = {
                    couponId: appliedCouponData.couponId || null,
                    couponCode: appliedCouponData.couponCode,
                    discount: appliedCouponData.discount,
                    originalTotal: appliedCouponData.originalTotal,
                    finalTotal: appliedCouponData.finalTotal
                };
            }

            function showStockError(data) {
                if (data.outOfStock && data.outOfStock.length > 0) {
                    let outOfStockMessage = '<div style="text-align: left; font-size: 14px;">The following items are out of stock:<br><br>';

                    data.outOfStock.forEach(item => {
                        const shortName = item.productName.split(' ').slice(0, 3).join(' ');
                        if (item.availableStock === 0) {
                            outOfStockMessage += `<div style="margin-bottom: 8px;">• <strong>${shortName}</strong> (Size: ${item.size}) - Out of stock</div>`;
                        } else {
                            outOfStockMessage += `<div style="margin-bottom: 8px;">• <strong>${shortName}</strong> (Size: ${item.size})<br>&nbsp;&nbsp;&nbsp;Only ${item.availableStock} available (You have ${item.requestedQty})</div>`;
                        }
                    });

                    outOfStockMessage += '<br>Please update your cart.</div>';

                    Swal.fire({
                        icon: 'error',
                        title: 'Stock Unavailable',
                        html: outOfStockMessage,
                        confirmButtonText: 'Go to Cart',
                        width: '450px',
                        customClass: {
                            popup: 'swal-rounded'
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/cart';
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to place order.',
                        ...swalOpts
                    });
                }
            }

            if (paymentMethod === 'cod') {
                try {
                    const res = await fetch('/checkout/place-order', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(orderData)
                    });
                    const data = await res.json();

                    if (res.ok && data.success) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Order Placed!',
                            showConfirmButton: false,
                            timer: 1500,
                            ...swalOpts
                        });
                        window.location.href = `/checkout/order-success/${data.orderId}`;
                    } else {
                        showStockError(data);
                    }
                } catch (err) {
                    console.error(err);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Something went wrong. Try again.',
                        ...swalOpts
                    });
                }
                return;
            }

            if (paymentMethod === 'wallet') {
                try {
                    const loadingSwal = Swal.fire({
                        title: 'Processing Payment...',
                        text: 'Deducting amount from your wallet',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        willOpen: () => {
                            Swal.showLoading();
                        },
                        ...swalOpts
                    });

                    const res = await fetch('/checkout/place-order', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(orderData)
                    });
                    const data = await res.json();

                    loadingSwal.close();

                    if (res.ok && data.success) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Payment Successful!',
                            text: 'Amount has been deducted from your wallet. Order placed successfully!',
                            showConfirmButton: false,
                            timer: 2000,
                            ...swalOpts
                        });
                        window.location.href = `/checkout/order-success/${data.orderId}`;
                    } else {
                        showStockError(data);
                    }
                } catch (err) {
                    console.error('Wallet payment error:', err);
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Error',
                        text: 'Something went wrong with wallet payment. Try again.',
                        ...swalOpts
                    });
                }
                return;
            }

            if (paymentMethod === 'razorpay') {
                try {
                    const loadingSwal = Swal.fire({
                        title: 'Processing...',
                        text: 'Creating payment order',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        willOpen: () => {
                            Swal.showLoading();
                        },
                        ...swalOpts
                    });

                    const orderRes = await fetch('/checkout/create-razorpay-order', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(orderData)
                    });

                    const orderData_response = await orderRes.json();

                    loadingSwal.close();

                    if (!orderRes.ok || !orderData_response.success) {
                        showStockError(orderData_response);
                        return;
                    }

                    const razorpayAmount = currentTotal * 100;

                    sessionStorage.setItem('failedOrderDetails', JSON.stringify({
                        addressId: orderData_response.addressId,
                        amount: currentTotal,
                        couponData: orderData.couponData || null,
                        razorpayOrderId: orderData_response.orderId
                    }));

                    const options = {
                        key: orderData_response.key,
                        amount: razorpayAmount,
                        currency: 'INR',
                        order_id: orderData_response.orderId,
                        name: 'Kaizen Street',
                        description: 'Order Payment',
                        image: '/assets2/imgs/theme/kaizenicon.svg',

                        method: {
                            netbanking: true,
                            card: false,
                            wallet: false,
                            upi: false,
                            paylater: false
                        },

                        handler: async function (response) {
                            const verifySwal = Swal.fire({
                                title: 'Verifying Payment...',
                                text: 'Please wait while we confirm your payment',
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                willOpen: () => {
                                    Swal.showLoading();
                                },
                                ...swalOpts
                            });

                            try {
                                const verifyData = {
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_signature: response.razorpay_signature,
                                    addressId: orderData_response.addressId
                                };

                                if (appliedCouponData) {
                                    verifyData.couponData = orderData.couponData;
                                }

                                const verifyRes = await fetch('/checkout/verify-payment', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify(verifyData)
                                });

                                const verifyResponseData = await verifyRes.json();
                                verifySwal.close();

                                if (verifyRes.ok && verifyResponseData.success) {
                                    sessionStorage.removeItem('failedOrderDetails');

                                    await Swal.fire({
                                        icon: 'success',
                                        title: 'Payment Successful!',
                                        text: 'Your order has been placed successfully.',
                                        showConfirmButton: false,
                                        timer: 2000,
                                        ...swalOpts
                                    });
                                    window.location.href = `/checkout/order-success/${verifyResponseData.orderId}`;
                                } else {
                                    verifySwal.close();

                                    const orderDetails = JSON.parse(sessionStorage.getItem('failedOrderDetails') || '{}');
                                    const couponCode = orderDetails.couponData?.couponCode || '';

                                    let failureUrl = `/checkout/order-failed?reason=verification_failed&orderId=${response.razorpay_order_id}`;
                                    if (couponCode) {
                                        failureUrl += `&couponCode=${encodeURIComponent(couponCode)}`;
                                    }

                                    window.location.href = failureUrl;
                                }
                            } catch (error) {
                                console.error('Payment verification error:', error);
                                verifySwal.close();

                                const orderDetails = JSON.parse(sessionStorage.getItem('failedOrderDetails') || '{}');
                                const couponCode = orderDetails.couponData?.couponCode || '';

                                let failureUrl = `/checkout/order-failed?reason=verification_error&orderId=${response.razorpay_order_id}`;
                                if (couponCode) {
                                    failureUrl += `&couponCode=${encodeURIComponent(couponCode)}`;
                                }

                                window.location.href = failureUrl;
                            }
                        },

                        theme: {
                            color: '#3399cc'
                        },

                        retry: {
                            enabled: true,
                            max_count: 3
                        },

                        timeout: 600,
                        remember_customer: false
                    };

                    const rzp = new Razorpay(options);

                    rzp.on('payment.failed', function (response) {
                        console.error('Payment failed:', response.error);

                        const orderDetails = JSON.parse(sessionStorage.getItem('failedOrderDetails') || '{}');
                        const couponCode = orderDetails.couponData?.couponCode || '';

                        const failureDetails = {
                            code: response.error.code,
                            description: response.error.description,
                            source: response.error.source,
                            step: response.error.step,
                            reason: response.error.reason,
                            orderId: orderData_response.orderId,
                            metadata: response.error.metadata
                        };

                        sessionStorage.setItem('paymentFailureDetails', JSON.stringify(failureDetails));

                        let failureUrl = `/checkout/order-failed?reason=payment_failed&orderId=${orderData_response.orderId}&code=${response.error.code}`;
                        if (couponCode) {
                            failureUrl += `&couponCode=${encodeURIComponent(couponCode)}`;
                        }

                        window.location.href = failureUrl;
                    });

                    rzp.open();

                } catch (err) {
                    console.error('Razorpay error:', err);

                    const orderDetails = JSON.parse(sessionStorage.getItem('failedOrderDetails') || '{}');
                    const couponCode = orderDetails.couponData?.couponCode || '';

                    let failureUrl = '/checkout/order-failed?reason=initialization_error';
                    if (couponCode) {
                        failureUrl += `&couponCode=${encodeURIComponent(couponCode)}`;
                    }

                    window.location.href = failureUrl;
                }
                return;
            }
        }

        async function setDefaultAddress(id) {
            try {
                const res = await fetch(`/checkout/set-default/${id}`, {
                    method: 'PATCH',
                    headers: { 'Accept': 'application/json' }
                });
                const json = await res.json();
                if (json.success) {
                    window.location.reload();
                } else {
                    console.error('Failed to set default');
                }
            } catch (err) {
                console.error('Network error', err);
            }
        }

        async function deleteAddress(id) {
            const { value: shouldDelete } = await Swal.fire({
                title: 'Are you sure?',
                text: "This will permanently delete the address.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it',
                cancelButtonText: 'Cancel',
                confirmButtonColor: '#d9534f',
                cancelButtonColor: '#6c757d',
                background: '#ffffff',
                iconColor: '#d9534f',
                customClass: {
                    popup: 'swal-responsive'
                }
            });

            if (!shouldDelete) {
                return;
            }

            try {
                const res = await fetch(`/checkout/address/${id}`, {
                    method: 'DELETE',
                    headers: { 'Accept': 'application/json' }
                });
                const json = await res.json();

                if (json.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Deleted!',
                        text: 'Your address has been removed.',
                        timer: 1400,
                        showConfirmButton: false,
                        timerProgressBar: true,
                        customClass: {
                            popup: 'swal-responsive'
                        }
                    });
                    document.querySelector(`[data-address-id="${id}"]`).remove();
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: json.message || 'Could not delete address.'
                    });
                }
            } catch (err) {
                console.error('Delete failed', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Network Error',
                    text: 'Please try again later.'
                });
            }
        }

        async function editAddress(id) {
            try {
                const res = await fetch(`/checkout/edit-address/${id}?from=checkout`, {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json'
                    }
                });

                if (res.ok) {
                    window.location.href = `/checkout/edit-address/${id}?from=checkout`;
                } else {
                    const data = await res.json();
                    Swal.fire({
                        icon: 'error',
                        title: 'Not Found',
                        text: data.message || 'Address not found'
                    });
                }

            } catch (err) {
                console.error('Failed to load address for edit', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong while trying to edit.'
                });
            }
        }

      function checkWalletBalance() {
    const walletRadio = document.querySelector('input[name="payment"][value="wallet"]');
    const walletBalanceDisplay = document.querySelector('.wallet-balance');
    const orderTotalElement = document.querySelector('.order-total');
    
    // Exit early if required elements don't exist
    if (!walletRadio || !walletBalanceDisplay || !orderTotalElement) {
        return;
    }
    
    const orderTotal = parseFloat(orderTotalElement.textContent.replace('₹', '').replace(',', '') || 0);
    const walletBalance = parseFloat(walletBalanceDisplay.textContent.replace('₹', '').replace(',', ''));

    if (walletBalance < orderTotal) {
        walletRadio.disabled = true;
        const paymentOption = walletRadio.closest('.payment-option');
        if (paymentOption) {
            paymentOption.classList.add('insufficient-balance');
        }

        const paymentOptionContent = walletRadio.closest('.payment-option-content');
        let insufficientMsg = paymentOptionContent?.querySelector('.insufficient-balance-msg');
        
        if (paymentOptionContent && !insufficientMsg) {
            insufficientMsg = document.createElement('div');
            insufficientMsg.className = 'insufficient-balance-msg';
            insufficientMsg.style.color = '#dc3545';
            insufficientMsg.style.fontSize = '12px';
            insufficientMsg.style.marginTop = '4px';
            insufficientMsg.textContent = `Insufficient balance. Need ₹${(orderTotal - walletBalance).toFixed(2)} more`;
            paymentOptionContent.appendChild(insufficientMsg);
        }
    } else {
        walletRadio.disabled = false;
        const paymentOption = walletRadio.closest('.payment-option');
        if (paymentOption) {
            paymentOption.classList.remove('insufficient-balance');
        }

        const insufficientMsg = walletRadio.closest('.payment-option')?.querySelector('.insufficient-balance-msg');
        if (insufficientMsg) {
            insufficientMsg.remove();
        }
    }
}

        document.addEventListener('DOMContentLoaded', function () {
            checkWalletBalance();
        });

    </script>

</body>

</html>