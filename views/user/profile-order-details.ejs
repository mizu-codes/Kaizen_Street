<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, user-scalable=yes">
  <title>Order Details</title>
  <link rel="icon" type="image/svg+xml" href="/imgs/theme/kaizenicon.svg">
  <link rel="stylesheet" href="/css/main.css?v=3.4">
  <link href="/css/responsiveUser.css" rel="stylesheet" type="text/css">
  <style>
    .compact-alert {
      width: 90% !important;
      max-width: 320px !important;
      padding: 1.5rem !important;
      border-radius: 10px !important;
    }

    .compact-alert .swal2-icon {
      width: 60px !important;
      height: 60px !important;
      margin: 1rem auto !important;
    }

    .compact-alert .swal2-title {
      font-size: 20px !important;
      padding: 0.5rem 0 !important;
    }

    .compact-alert .swal2-html-container {
      font-size: 14px !important;
      margin: 0.5rem 0 1rem 0 !important;
    }

    .bottom-actions {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1rem;
      margin-top: 2rem;
      width: 100%;
    }

    .btn-back-to-orders {
      background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
      color: white;
      text-decoration: none;
      border: none;
      padding: 12px 32px;
      border-radius: 50px;
      font-size: 16px;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: 8px;
      transition: all 0.3s ease;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .btn-back-to-orders:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 16px rgba(59, 130, 246, 0.4);
    }

    .btn-retry-payment {
      background: linear-gradient(135deg, #10b981 0%, #059669 100%);
      color: white;
      border: none;
      padding: 8px 18px;
      border-radius: 12px;
      font-size: 12px;
      font-weight: 600;
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      gap: 8px;
      transition: all 0.3s ease;
      box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
      width: auto;
      margin-top: 12px;
    }

    .btn-retry-payment:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 16px rgba(16, 185, 129, 0.4);
    }

    .btn-retry-payment:active,
    .btn-back-to-orders:active {
      transform: translateY(0);
    }

    .btn-retry-payment i,
    .btn-back-to-orders i {
      font-size: 18px;
    }


    .btn-retry-payment::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left 0.5s;
    }

    .btn-retry-payment:hover::before {
      left: 100%;
    }

    .btn-retry-payment:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }

    .btn-retry-payment:active {
      transform: translateY(0);
      box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }

    .swal2-popup.swal-responsive {
      color: #333 !important;
      border: 2px solid rgba(0, 0, 0, 0.1) !important;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15) !important;
      backdrop-filter: blur(10px) !important;
    }

    .swal2-title {
      color: #e74c3c !important;
      font-weight: 600 !important;
      text-shadow: none !important;
    }

    .swal2-content {
      color: #666 !important;
    }

    .swal2-confirm {
      background: #3BB77E !important;
      border: none !important;
      border-radius: 8px !important;
      padding: 12px 30px !important;
      font-weight: 600 !important;
      color: white !important;
      box-shadow: 0 4px 15px rgba(59, 183, 126, 0.3) !important;
      transition: all 0.3s ease !important;
    }

    .swal2-confirm:hover {
      background: #2a9d5f !important;
      transform: translateY(-1px) !important;
      box-shadow: 0 6px 20px rgba(59, 183, 126, 0.4) !important;
    }

    .swal2-icon.swal2-error {
      border-color: #e74c3c !important;
      color: #e74c3c !important;
    }

    .swal2-icon.swal2-error .swal2-x-mark {
      color: #e74c3c !important;
    }

    .swal-responsive {
      width: 90% !important;
      max-width: 320px !important;
      padding: 1.2rem !important;
      border-radius: 10px;
      font-size: 0.95rem;
    }

    .payment-failed-section {
      margin-top: 20px;
      animation: slideInUp 0.5s ease-out;
    }

    @keyframes slideInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .payment-failed-section>div {
      background: linear-gradient(135deg, #fff5f5 0%, #ffe5e5 100%);
      border: 2px solid #dc3545;
      border-radius: 12px;
      padding: 24px;
      text-align: center;
      box-shadow: 0 4px 12px rgba(220, 53, 69, 0.1);
    }

    .payment-failed-section h4 {
      color: #dc3545;
      margin-bottom: 12px;
      font-size: 20px;
      font-weight: 600;
    }

    .payment-failed-section p {
      color: #666;
      margin-bottom: 20px;
      font-size: 14px;
      line-height: 1.6;
      max-width: 400px;
      margin-left: auto;
      margin-right: auto;
    }

    /* Status badge for Payment Failed */
    .status-badge.status-payment-failed {
      background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
      color: white;
      padding: 6px 14px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 600;
      display: inline-block;
      box-shadow: 0 2px 8px rgba(220, 53, 69, 0.3);
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .btn-retry-payment {
        width: 100%;
        justify-content: center;
        padding: 12px 24px;
        font-size: 15px;
      }
    }

    /* Loading animation for retry button */
    .btn-retry-payment.loading {
      pointer-events: none;
      opacity: 0.7;
    }

    .btn-retry-payment.loading::after {
      content: '';
      position: absolute;
      width: 16px;
      height: 16px;
      top: 50%;
      left: 50%;
      margin-left: -8px;
      margin-top: -8px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-radius: 50%;
      border-top-color: white;
      animation: spin 0.6s linear infinite;
    }

    @keyframes spin {
      to {
        transform: rotate(360deg);
      }
    }

    .pricing-info {
      font-size: 0.85em;
      margin-top: 5px;
    }

    .original-price {
      text-decoration: line-through;
      color: #999;
      margin-right: 10px;
    }

    .actual-paid {
      color: #28a745;
      font-weight: 600;
    }

    .item-total .original-amount {
      text-decoration: line-through;
      color: #999;
      font-size: 0.9em;
    }

    .item-total .paid-amount {
      color: #28a745;
      font-weight: 600;
    }

    .discount-row {
      color: #28a745;
      font-weight: 500;
    }

    .savings-info {
      text-align: center;
      color: #28a745;
      font-weight: 500;
      margin-top: 10px;
      padding: 8px;
      background-color: #f8f9fa;
      border-radius: 4px;
    }

    .btn-return {
      background: rgb(8, 129, 120);
      color: white;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 6px;
      font-size: 0.875rem;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .btn-return:hover {
      background: rgb(6, 103, 96);
      box-shadow: 0 0 25px rgba(8, 129, 120, 1);
    }

    .return-status {
      margin-top: 5px;
    }

    .return-badge {
      padding: 2px 8px;
      border-radius: 12px;
      font-size: 11px;
      font-weight: 500;
    }

    .return-requested {
      background-color: #fff3cd;
      color: #856404;
      padding: 4px 8px;
      border-radius: 12px;
      font-size: 11px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .return-accepted {
      background-color: #d4edda;
      color: #155724;
      padding: 4px 8px;
      border-radius: 12px;
      font-size: 11px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .return-rejected {
      background-color: #f8d7da;
      color: #721c24;
      padding: 4px 8px;
      border-radius: 12px;
      font-size: 11px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .swal-responsive {
      width: 90% !important;
      max-width: 500px !important;
    }

    .main-content {
      background: white;
      border-radius: 16px;
      box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
      overflow: hidden;
    }

    .profile-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px 30px;
      border-bottom: 1px solid #f0f0f0;
      background: linear-gradient(135deg, #e8f4f2 0%, #ddf0e8 100%);
      flex-wrap: wrap;
      gap: 1rem;
    }

    .profile-header h3 {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      font-size: 1.5rem;
      font-weight: 600;
      color: #253D4E;
      margin: 0;
    }

    .profile-header h3 i {
      color: #3BB77E;
      font-size: 1.75rem;
    }

    .header-left {
      display: flex;
      align-items: center;
      gap: 1.5rem;
    }

    .btn-back {
      background: white;
      border: 1px solid #e0e4e8;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      color: #253D4E;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .btn-back:hover {
      background: #3BB77E;
      color: white;
      border-color: #3BB77E;
      text-decoration: none;
    }

    .btn-download-invoice {
      background: #088178;
      color: white;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .btn-download-invoice:hover {
      background: #066b62;
      color: white;
    }

    .order-details-grid {
      display: grid;
      grid-template-columns: 1fr 300px;
      gap: 2rem;
      margin-bottom: 2rem;
    }

    .left-column {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }

    .summary-section {
      background: white;
      padding: 0.5rem;
      border-radius: 8px;
    }

    .summary-section h4 {
      color: #088178;
      margin: 0 0 1rem 0;
      font-size: 1.2rem;
      font-weight: 600;
    }

    .summary-item {
      display: flex;
      justify-content: space-between;
      padding: 0.5rem 0;
      border-bottom: 1px solid #f0f0f0;
      color: #4a5568;
    }

    .summary-item:last-child {
      border-bottom: none;
    }

    .status-badge {
      padding: 0.4rem 0.8rem;
      border-radius: 20px;
      font-weight: 600;
      font-size: 0.75rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    /* Items Section */
    .items-section {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .item-row {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      background: white;
      border-radius: 8px;
      border: 1px solid #f0f0f0;
    }

    .item-image {
      width: 60px;
      height: 60px;
      object-fit: cover;
      border-radius: 6px;
    }

    .item-details {
      flex: 1;
    }

    .item-details h6 {
      margin: 0 0 0.25rem 0;
      font-size: 1rem;
      font-weight: 600;
      color: #253D4E;
    }

    .item-specs {
      color: #7e7e7e;
      font-size: 0.85rem;
    }

    .item-actions {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.5rem;
    }

    .status-placed {
      background: #ffc107;
      color: #856404;
    }

    .status-processing {
      background: #17a2b8;
      color: white;
    }

    .status-shipped {
      background: #6f42c1;
      color: white;
    }

    .status-out-for-delivery {
      background: #fd7e14;
      color: white;
    }

    .status-delivered {
      background: #28a745;
      color: white;
    }

    .status-cancelled {
      background: #dc3545;
      color: white;
    }

    .item-total {
      font-weight: 600;
      color: #253D4E;
      font-size: 1.1rem;
    }

    .price-breakdown {
      background: white;
      padding: 0.2rem;
      border-radius: 8px;
    }

    .price-row {
      display: flex;
      justify-content: space-between;
      padding: 0.5rem 0;
      color: #4a5568;
    }

    .total-row {
      border-top: 1px solid #e0e0e0;
      padding-top: 1rem;
      margin-top: 1rem;
      font-size: 1.1rem;
    }

    .right-column {
      display: flex;
      flex-direction: column;
    }

    .address-section {
      background: white;
      padding: 1.5rem;
      border-radius: 8px;
    }

    .address-section h4 {
      color: #088178;
      margin: 0 0 1rem 0;
      font-size: 1.2rem;
      font-weight: 600;
    }

    .address-content p {
      margin: 0.25rem 0;
      color: #4a5568;
      line-height: 1.5;
    }

    .bottom-actions {
      display: flex;
      justify-content: center;
      padding-top: 1rem;
    }

    .btn-back-to-orders {
      background: #007bff;
      color: white;
      text-decoration: none;
      padding: 0.75rem 1.5rem;
      border-radius: 25px;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.3s ease;
      border: 2px solid #007bff;
    }

    .btn-back-to-orders:hover {
      background: #0056b3;
      border-color: #0056b3;
      color: white;
      text-decoration: none;
    }

    .no-order-found {
      text-align: center;
      padding: 4rem 2rem;
      background: linear-gradient(135deg, #f8fffe 0%, #f0f9f6 100%);
      border: 2px solid #e8f5e8;
      border-radius: 20px;
      box-shadow: 0 8px 32px rgba(59, 183, 126, 0.1);
    }

    .no-order-found .icon-container {
      display: inline-block;
      margin-bottom: 1.5rem;
    }

    .no-order-found i {
      font-size: 4rem;
      color: #dc3545;
    }

    .no-order-found h3 {
      color: #253D4E;
      margin-bottom: 1rem;
      font-size: 1.5rem;
      font-weight: 600;
    }

    .no-order-found p {
      color: #7e8a98;
      margin-bottom: 2rem;
      font-size: 1.1rem;
    }

    .no-order-found {
      text-align: center;
      padding: 4rem 2rem;
      background: linear-gradient(135deg, #f8fffe 0%, #f0f9f6 100%);
      border: 2px solid #e8f5e8;
      border-radius: 20px;
      box-shadow: 0 8px 32px rgba(59, 183, 126, 0.1);
    }

    .no-order-found .icon-container {
      display: inline-block;
      margin-bottom: 1.5rem;
    }

    .no-order-found i {
      font-size: 4rem;
      color: #dc3545;
    }

    .no-order-found h3 {
      color: #253D4E;
      margin-bottom: 1rem;
      font-size: 1.5rem;
      font-weight: 600;
    }

    .no-order-found p {
      color: #7e8a98;
      margin-bottom: 2rem;
      font-size: 1.1rem;
    }

    .btn-cancel {
      background: #e53935;
      color: white;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 6px;
      font-size: 0.875rem;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .btn-cancel:hover {
      background: #c62828;
      transform: translateY(-1px);
    }

    .btn-cancel.faded {
      opacity: 0.5;
      filter: grayscale(100%);
      cursor: not-allowed;
    }

    .btn-cancel.faded::after {
      position: absolute;
      top: 50%;
      left: 10%;
      right: 10%;
      height: 1px;
      background: #fff;
      transform: translateY(-50%);
    }

    @media (max-width: 768px) {
      .profile-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
      }

      .header-left {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
        width: 100%;
      }

      .header-actions {
        width: 100%;
      }

      .btn-download-invoice {
        width: 100%;
        justify-content: center;
      }

      .order-details-grid {
        grid-template-columns: 1fr;
        gap: 1rem;
      }

      .item-row {
        flex-direction: column;
        text-align: center;
        gap: 0.75rem;
      }

      .item-actions {
        flex-direction: row;
        justify-content: center;
        width: 100%;
      }

      .summary-item,
      .price-row {
        flex-direction: column;
        gap: 0.25rem;
        text-align: center;
      }

      .bottom-actions {
        justify-content: center;
      }
    }

    @media (max-width: 480px) {

      .profile-header,
      .profile-body {
        padding: 1rem;
      }

      .summary-section,
      .address-section,
      .price-breakdown {
        padding: 1rem;
      }

      .item-row {
        padding: 0.75rem;
      }

      .item-image {
        width: 50px;
        height: 50px;
      }
    }


    .btn-cancel-order {
      width: 100%;
      justify-content: center;
    }

    .order-item-detail {
      flex-direction: column;
      text-align: center;
    }

    .item-attributes {
      justify-content: center;
    }

    .item-pricing {
      text-align: center;
    }

    .price-row,
    .payment-method,
    .payment-status {
      flex-direction: column;
      text-align: center;
    }


    @media (max-width: 480px) {

      .profile-header,
      .profile-body {
        padding: 1rem;
      }

      .items-list,
      .address-card,
      .price-breakdown,
      .payment-card {
        padding: 1rem;
      }

      .order-header-details {
        padding: 1rem;
      }

      .item-attributes {
        flex-direction: column;
        gap: 0.25rem;
      }
    }
  </style>
</head>

<body>

  <header class="header-area header-style-1 header-height-2">
    <div class="header-top header-top-ptb-1 d-none d-lg-block">
      <div class="container">
        <div class="row align-items-center">
          <div class="col-xl-3 col-lg-4">
            <div class="header-info">
            </div>
          </div>
          <div class="col-xl-6 col-lg-4">
            <div class="text-center">
            </div>
          </div>
          <div class="col-xl-3 col-lg-4">
            <div class="header-info header-info-right">
              <% if (user) { %>
                <div class="dropdown">
                  <a href="#" class="sign-in-link">
                    <%= user.name %>
                  </a>
                </div>
                <% } else { %>
                  <ul>
                    <li>
                      <i class="fi-rs-user"></i>
                      <a href="/login">Log In</a>
                    </li>
                  </ul>
                  <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
     <div class="header-middle header-middle-ptb-1 d-none d-lg-block">
            <div class="container">
                <div class="header-wrap">
                    <div class="logo logo-width-1">
                        <a href="#"><img src="/imgs/theme/kaizenlogoo.svg" alt="logo"></a>
                    </div>
                    <div class="header-right">
                        <div class="search-style-2"></div>
                        <div class="header-action-right">
                            <div class="header-action-2">
                                <div class="header-action-icon-2">
                                    <a href="/wishlist">
                                        <img class="svgInject" alt="Evara" src="/imgs/theme/icons/icon-heart.svg">
                                        <span id="wishlistItemCount" class="pro-count blue">
                                            <%= wishlistItemCount %>
                                        </span>
                                    </a>
                                </div>
                                <div class="header-action-icon-2">
                                    <a class="mini-cart-icon" href="/cart">
                                        <img alt="Evara" src="/imgs/theme/icons/icon-cart.svg">
                                        <span id="cartItemCount" class="pro-count blue">
                                            <%= cartItemCount %>
                                        </span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="header-bottom header-bottom-bg-color sticky-bar">
            <div class="container">
                <div class="header-wrap header-space-between position-relative">
                    <div class="logo logo-width-1 d-block d-lg-none">
                        <a href="#"><img src="/imgs/theme/kaizenlogoo.svg" alt="logo"></a>
                    </div>
                    <div class="header-nav d-none d-lg-flex">
    
                        <div class="main-menu main-menu-padding-1 main-menu-lh-2 d-none d-lg-block">
                            <nav>
                                <ul>
                                    <li><a href="/">Home</a></li>
                                    <li><a class='active' href="/shop">Shop</a></li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                    <div class="header-action-right d-block d-lg-none">
                        <div class="header-action-2">
                            <div class="header-action-icon-2">
                                <a href="/wishlist">
                                    <img alt="Evara" src="/imgs/theme/icons/icon-heart.svg">
                                    <span id="wishlistItemCount" class="pro-count blue">
                                        <%= wishlistItemCount %>
                                    </span>
                                </a>
                            </div>
                            <div class="header-action-icon-2">
                                <a class="mini-cart-icon" href="/cart">
                                    <img alt="Evara" src="/imgs/theme/icons/icon-cart.svg">
                                    <span id="cartItemCount" class="pro-count blue">
                                        <%= cartItemCount %>
                                    </span>
                                </a>
                            </div>
                            <div class="header-action-icon-2 d-block d-lg-none">
                                <div class="burger-icon burger-icon-white">
                                    <span class="burger-icon-top"></span>
                                    <span class="burger-icon-mid"></span>
                                    <span class="burger-icon-bottom"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
  <div class="mobile-header-active mobile-header-wrapper-style">
    <div class="mobile-header-wrapper-inner">
        <div class="mobile-header-top">
            <div class="mobile-header-logo">
                <a href="#"><img src="/imgs/theme/kaizenlogoo.svg" alt="logo"></a>
            </div>
            <div class="mobile-menu-close close-style-wrap close-style-position-inherit">
                <button class="close-style search-close">
                    <i class="icon-top"></i>
                    <i class="icon-bottom"></i>
                </button>
            </div>
        </div>
        <div class="mobile-header-content-area">
            <div class="mobile-menu-wrap mobile-header-border">
                <nav>
                    <ul class="mobile-menu">
                        <li><a href="/">Home</a></li>
                        <li><a href="/shop">Shop</a></li>
                    </ul>
                </nav>
            </div>
           
            <div class="mobile-header-info-wrap mobile-header-border">
                <% if (user) { %>
                    <div class="single-mobile-header-info mt-10 mb-10">
                        <i class="fi-rs-user"></i>
                        <strong><%= user.name %></strong>
                    </div>
                <% } else { %>
                    <div class="single-mobile-header-info">
                        <a href="/login"><i class="fi-rs-user"></i> Log In</a>
                    </div>
                    <div class="single-mobile-header-info">
                        <a href="/signup"><i class="fi-rs-user-add"></i> Sign Up</a>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<div class="anime-elements">
            <div class="sakura">🌸</div>
            <div class="sakura">🌸</div>
            <div class="sakura">🌸</div>
            <div class="sakura">🌸</div>
            <div class="sakura">🌸</div>
            <div class="sakura">🌸</div>
            <div class="sakura">🌸</div>
            <div class="sakura">🌸</div>
            <div class="kanji-float">化</div>
            <div class="kanji-float">革</div>
        </div>

  <div class="page-header breadcrumb-wrap">
    <div class="container">
      <div class="breadcrumb" aria-label="Breadcrumb navigation">
        <a href="#" rel="nofollow">Home</a>
        <span></span> User Profile
        <span></span> My Orders
        <span></span> Order Details
      </div>
    </div>
  </div>

  <div class="profile-container">
    <div class="profile-layout">
      <button class="mobile-sidebar-toggle" onclick="toggleSidebar()">
        <span>
          <i class="fi-rs-menu"></i>
          My Account Menu
        </span>
        <i class="fi-rs-angle-down toggle-icon"></i>
      </button>

      <aside class="profile-sidebar" id="profileSidebar">
        <h4>My Account</h4>
        <ul>
          <li>
            <a href="/userProfile">
              <i class="fi-rs-user"></i> My Profile
            </a>
          </li>
          <li>
            <a href="/orders" class="active">
              <i class="fi-rs-shopping-bag"></i> My Orders
            </a>
          </li>
          <li>
            <a href="/profile/addresses">
              <i class="fi-rs-marker"></i> My Addresses
            </a>
          </li>
          <li>
            <a href="/wallet">
              <i class="fi-rs-credit-card"></i> My Wallet
            </a>
          </li>
          <li>
            <a href="/profile/security">
              <i class="fi-rs-shield-check"></i> Security Settings
            </a>
          </li>
          <li>
            <a href="/logout">
              <i class="fi-rs-sign-out"></i> Logout
            </a>
          </li>
        </ul>
      </aside>


      <main class="profile-content">
        <div class="profile-header">
          <div class="header-left">
            <h3><i class="fi-rs-receipt"></i> Order Details</h3>
          </div>
          <div class="header-actions">
            <% const validStatuses=['placed', 'processing' , 'shipped' , 'out for delivery' , 'delivered' ]; const
              orderStatus=(order.status || '' ).toLowerCase(); const isPaid=order.paymentStatus==='paid' ||
              order.paymentMethod==='cod' ; const canDownloadInvoice=validStatuses.includes(orderStatus) && isPaid; %>
          
              <% if (canDownloadInvoice) { %>
                <a href="/orders/<%= order._id %>/invoice" class="btn-download-invoice">
                  <i class="fi-rs-download"></i> Download Invoice
                </a>
                <% } %>
          </div>
          </div>

        <div class="profile-body">
          <% if (order) { %>
            <% const originalTotal=order.items.reduce((sum, item)=> sum + (item.subtotal || (item.price *
              item.quantity)), 0);
              const orderDiscount = order.discount || 0;
              const actualAmountPaid = originalTotal - orderDiscount;
              %>

              <div class="order-details-grid">
                <div class="left-column">
                  <div class="summary-section">
                    <h4>Order Summary</h4>
                    <div class="summary-item">
                      <span>Order ID:</span>
                      <span> #<%= order.displayOrderId||order._id.toString().slice(-8).toUpperCase() %></span>
                    </div>
                    <div class="summary-item">
                      <span>Order Date:</span>
                      <span>
                        <% if (order.createdAt) { %>
                          <%= (order.createdAt.toLocaleString ? order.createdAt : new
                            Date(order.createdAt)).toLocaleString('en-US', { weekday: 'short' , year: 'numeric' ,
                            month: 'short' , day: '2-digit' , hour: '2-digit' , minute: '2-digit' }) %>
                            <% } else { %>
                              Recently
                              <% } %>
                      </span>
                    </div>
                    <div class="summary-item">
                      <span>Amount Paid:</span>
                      <span>₹ <%= actualAmountPaid %></span>
                    </div>
                    <div class="summary-item">
                      <span>Payment Method:</span>
                      <span>
                        <%= order.paymentMethod || 'card' %>
                      </span>
                    </div>
                    <div class="summary-item">
                      <span>Total Items:</span>
                      <span>
                        <%= order.items.length %>
                      </span>
                    </div>
                  </div>

                  <div class="items-section">
                    <h4>Order Items</h4>
                    <% order.items.forEach((item, index)=> { %>
                      <% const itemOriginalSubtotal=item.subtotal || (item.price * item.quantity); let itemActualPaid;
                        if (orderDiscount> 0 && originalTotal > 0) {
                        const itemDiscountProportion = itemOriginalSubtotal / originalTotal;
                        const itemDiscountAmount = orderDiscount * itemDiscountProportion;
                        itemActualPaid = itemOriginalSubtotal - itemDiscountAmount;
                        } else {
                        itemActualPaid = itemOriginalSubtotal;
                        }
                        itemActualPaid = Math.round(itemActualPaid * 100) / 100;
                        %>

                        <div class="item-row">
                          <img src="<%= item.image || '/imgs/placeholder.jpg' %>" alt="<%= item.name %>"
                            class="item-image" onerror="this.src='/imgs/placeholder.jpg'">

                          <div class="item-details">
                            <h6>
                              <%= item.name %>
                            </h6>
                            <div class="item-specs">
                              Qty: <%= item.quantity %> | ₹ <%= item.price %> | Variant: <%= item.size || 'Standard' %>
                            </div><br>
                            <% if (orderDiscount> 0) { %>
                              <div class="pricing-info">
                                <span class="original-price">Original: ₹<%= itemOriginalSubtotal %></span>
                                <span class="actual-paid">Paid: ₹<%= itemActualPaid %></span>
                              </div><br>
                              <% } %>
                                <div class="item-status-display">
                                  <span
                                    class="status-badge status-<%= (item.status || order.status).toLowerCase().replace(/\s+/g, '-') %>">
                                    <%= item.status || order.status %>
                                  </span>
                                </div>
                          </div>

                          <div class="item-actions">
                            <% const itemStatus=(item.status || order.status).toLowerCase(); %>
                              <% const canCancel=['placed', 'processing' , 'confirmed' ].includes(itemStatus) &&
                                itemStatus !=='cancelled' ; %>

                                <button class="btn-cancel <%= canCancel ? '' : 'faded' %>"
                                  data-item-id="<%= item._id %>" data-item-name="<%= item.name %>" <%=canCancel ? ''
                                  : 'disabled' %>>
                                  Cancel
                                </button>

                                <% if (item.returnRequest && item.returnRequest.status) { %>
                                  <div class="return-status">
                                    <% const status=item.returnRequest.status.toLowerCase(); %>
                                      <% if (status==='requested' ) { %>
                                        <span class="return-requested return-<%= status %>">
                                          Refund Requested
                                        </span>
                                        <% } else if (status==='refunded' ) { %>
                                          <span class="return-accepted return-<%= status %>">
                                            Refunded
                                          </span>
                                          <% } else if (status==='rejected' ) { %>
                                            <span class="return-rejected return-<%= status %>">
                                              Rejected
                                            </span>
                                            <% } else { %>
                                              <span class="return-badge return-<%= status %>">
                                                <%= status.charAt(0).toUpperCase() + status.slice(1) %>
                                              </span>
                                              <% } %>
                                  </div>
                                  <% } %>

                                    <% const canReturn=itemStatus==='delivered' && (!item.returnRequest ||
                                      !item.returnRequest.status) && itemStatus !=='cancelled' ; %>
                                      <% if (canReturn) { %>
                                        <button class="btn-return" data-item-id="<%= item._id %>"
                                          data-item-name="<%= item.name %>">
                                          Return
                                        </button>
                                        <% } %>
                          </div>

                          <div class="item-total">
                            <% if (orderDiscount> 0) { %>
                              <% } else { %>
                                ₹<%= itemOriginalSubtotal %>
                                  <% } %>
                          </div>
                        </div>
                        <% }); %>
                  </div>

                  <div class="price-breakdown">
                    <div class="price-row">
                      <span>Subtotal:</span>
                      <span>₹<%= originalTotal %></span>
                    </div>
                    <div class="price-row">
                      <span>Shipping Charges:</span>
                      <span>₹<%= order.shippingCost || 0 %></span>
                    </div>
                    <div class="price-row discount-row">
                      <span>Discount Applied:</span>
                      <span>-₹<%= orderDiscount %></span>
                    </div>
                    <div class="price-row total-row">
                      <span><strong>Amount Paid:</strong></span>
                      <span><strong>₹<%= actualAmountPaid %></strong></span>
                    </div>
                    <% if (orderDiscount> 0) { %>
                      <div class="savings-info">
                        <small>You saved ₹<%= orderDiscount %> with coupon!</small>
                      </div>
                      <% } %>
                  </div>
                </div>

                <div class="right-column">
                  <div class="address-section">
                    <h4>Shipping Address</h4>
                    <div class="address-content">
                      <% const a=order.address; %>
                        <% if (a) { %>
                          <p><strong>Name:</strong>
                            <%= a.userName || a.fullName || 'Customer' %>
                          </p>
                          <p>
                            <%= a.houseNo || a.address || '' %>, <%= a.locality || a.street || '' %>
                          </p>
                          <p>
                            <%= a.city %> – <%= a.pincode %>
                          </p>
                          <% if (a.phoneNumber || a.phone) { %>
                            <p><strong>Phone:</strong> +91 <%= a.phoneNumber || a.phone %>
                            </p>
                            <% } %>
                              <% if (a.altPhoneNumber) { %>
                                <p><strong>Alt Phone:</strong> +91 <%= a.altPhoneNumber %>
                                </p>
                                <% } %>
                                  <% } else { %>
                                    <p>Address details not available</p>
                                    <% } %>
                    </div>
                  </div>


                  <div class="bottom-actions">
                    <a href="/orders" class="btn-back-to-orders">
                      <i class="fi-rs-arrow-left"></i> Back to Orders
                    </a>

                    <% if (order.status==='Payment Failed' && order.paymentMethod==='razorpay' ) { %>
                      <button onclick="retryPayment('<%= order._id %>')" class="btn-retry-payment">
                        <i class="fi-rs-refresh"></i>
                        Retry Payment
                      </button>
                      <% } %>
                  </div>
                </div>
              </div>

              <% } else { %>
                <div class="no-order-found">
                  <div class="icon-container">
                    <i class="fi-rs-exclamation"></i>
                  </div>
                  <h3>Order Not Found</h3>
                  <p>The order you're looking for doesn't exist or has been removed.</p>
                  <a href="/orders" class="btn-back-orders">
                    <i class="fi-rs-arrow-left"></i> Back to Orders
                  </a>
                </div>
                <% } %>
        </div>
      </main>
    </div>
  </div>


 <footer class="main">
    <section class="newsletter p-30 text-white wow fadeIn animated">
        <div class="floating-elements">
            <div class="floating-element">桜</div>
            <div class="floating-element">桜</div>
            <div class="floating-element">⚡</div>
            <div class="floating-element">🌸</div>
        </div>
    </section>

    <section class="section-padding footer-mid">
        <div class="container pt-15 pb-20">
            <div class="row">
                <div class="col-lg-4 col-md-6">
                    <div class="footer-logo mb-20">
                        <a><img src="/imgs/theme/kaizenlogoo.svg" alt="Kaizen Logo"></a>
                    </div>
                    <div class="widget-about font-md mb-md-5 mb-lg-0">
                        <div class="brand-story wow fadeIn animated">
                            <p class="text-grey-4 mb-15">
                                <strong>Kaizen</strong> (改善) — Japanese philosophy of continuous improvement and
                                evolution. We embody this principle in every stitch, every design, and every collection.
                            </p>
                            <p class="text-grey-4 mb-20">
                                From streetwear roots to evolving aesthetics, Kaizen represents the relentless pursuit
                                of perfection. We don't just create clothing; we evolve culture, one piece at a time.
                            </p>
                        </div>
                    </div>
                </div>

                <div class="col-lg-2 col-md-3">
                    <h5 class="widget-title wow fadeIn animated">Quick Links</h5>
                    <ul class="footer-list wow fadeIn animated mb-sm-5 mb-md-0">
                        <li><a href="/">Home</a></li>
                        <li><a href="/shop">Shop</a></li>
                        <li><a href="/cart">Cart</a></li>
                        <li><a href="/wishlist">Wishlist</a></li>
                    </ul>
                </div>

                <div class="col-lg-2 col-md-3">
                    <h5 class="widget-title wow fadeIn animated">My Account</h5>
                    <ul class="footer-list wow fadeIn animated">
                        <li><a href="/userProfile">My Profile</a></li>
                        <li><a href="/profile/coupons">View Coupons</a></li>
                        <li><a href="/wallet">Open Wallet</a></li>
                        <li><a href="/orders">Track My Order</a></li>
                        <li><a href="/profile/addresses">View Address</a></li>
                    </ul>
                </div>
                <div class="col-lg-4 col-md-6">
                    <h5 class="widget-title wow fadeIn animated">Contact</h5>
                    <div class="widget-about font-md mb-md-5 mb-lg-0 wow fadeIn animated">
                        <p class="wow fadeIn animated">
                            <strong>Address:</strong> Kannur, Kerala
                        </p>
                        <p class="wow fadeIn animated">
                            <strong>Phone:</strong> +91 9000 123 456 / +91 484 555 0123
                        </p>
                        <p class="wow fadeIn animated">
                            <strong>Hours:</strong> 10:00 - 21:00, Mon - Sun
                        </p>
                    </div>

                    <div class="payment-section mt-30">
                        <p class="mb-15 fw-600 text-grey-4 wow fadeIn animated">Secured Payment Methods</p>
                        <div class="payment-methods wow fadeIn animated d-flex align-items-center gap-3">
                            <div class="payment-method-item">
                                <img src="/imgs/theme/COD-icon.png" alt="COD" style="height: 55px;">
                            </div>
                            <div class="payment-method-item">
                                <img src="/imgs/theme/wallet-icon.png" alt="Wallet" style="height: 60px;">
                            </div>
                            <div class="payment-method-item">
                                <img src="/imgs/theme/razorpay-icon.png" alt="Razorpay" style="height: 55px;">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="container pb-20 wow fadeIn animated">
        <div class="row">
            <div class="col-12">
                <hr class="footer-divider mb-3">
            </div>
            <div class="col-lg-6 col-md-6">
                <p class="text-md-start text-center font-sm text-muted mb-0">
                    &copy; <span id="year"></span> <strong class="text-brand">Kaizen Street</strong>. All rights
                    reserved.
                </p>
            </div>
            <div class="col-lg-6 col-md-6">
                <p class="text-md-end text-center font-sm text-muted mb-0">
                    Designed with <span class="text-brand">❤</span>
                </p>
            </div>
        </div>
    </div>
</footer>

 
  <script src="/js/wishlist-count-updater.js"></script>=
  <script src="/js/cart-count-updater.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

  <script src="/js/responsiveUser.js"></script>
  
  <script>
    document.getElementById('year').textContent = new Date().getFullYear();

    function toggleMobileProfileDropdown() {
      const dropdown = document.querySelector('.mobile-profile-dropdown');
      dropdown.classList.toggle('active');
    }

    document.addEventListener('click', function (event) {
      const dropdown = document.querySelector('.mobile-profile-dropdown');
      if (dropdown && !dropdown.contains(event.target)) {
        dropdown.classList.remove('active');
      }
    });
  </script>

<script>
    const section = document.querySelector('.newsletter');

    window.addEventListener('scroll', () => {
        const rect = section.getBoundingClientRect();
        const topOfPage = window.pageYOffset;
        const topOfSec = rect.top + topOfPage;
        const scrolled = topOfPage - topOfSec;
        const distance = Math.max(scrolled, 0);
        const yPos = distance * -0.5;
    });
</script>

  <script>
    function toggleSidebar() {
      const sidebar = document.getElementById('profileSidebar');
      const toggle = document.querySelector('.mobile-sidebar-toggle');

      sidebar.classList.toggle('show');
      toggle.classList.toggle('active');
    }

    document.addEventListener('click', function (event) {
      const sidebar = document.getElementById('profileSidebar');
      const toggle = document.querySelector('.mobile-sidebar-toggle');

      if (window.innerWidth <= 991 &&
        !sidebar.contains(event.target) &&
        !toggle.contains(event.target) &&
        sidebar.classList.contains('show')) {
        sidebar.classList.remove('show');
        toggle.classList.remove('active');
      }
    });

    window.addEventListener('resize', function () {
      const sidebar = document.getElementById('profileSidebar');
      const toggle = document.querySelector('.mobile-sidebar-toggle');

      if (window.innerWidth > 991) {
        sidebar.classList.remove('show');
        toggle.classList.remove('active');
      }
    });


    function redirectToOrderDetails(orderId) {
      window.location.href = `/orders/${orderId}`;
    }
  </script>

  <script>
    const CANCEL_REASONS = {
      changed: 'Changed my mind',
      betterDeal: 'Found a better deal',
      mistake: 'Ordered by mistake',
      delayed: 'Shipping is delayed',
      noLonger: 'Product no longer needed'
    };

    const RETURN_REASONS = {
      defective: 'Product is defective',
      wrongItem: 'Wrong item received',
      damaged: 'Item arrived damaged',
      notAsDescribed: 'Not as described',
      sizeIssue: 'Size/fit issue',
      qualityIssue: 'Quality not as expected',
      other: 'Other reason'
    };

    document.querySelectorAll('.btn-cancel').forEach((btn) => {
      btn.addEventListener('click', async () => {
        const itemId = btn.dataset.itemId;
        const itemName = btn.dataset.itemName;

        if (!itemId) {
          return Swal.fire('Error', 'Item ID not found. Cannot cancel.', 'error');
        }

        const {
          value: reason,
          isConfirmed
        } = await Swal.fire({
          title: 'Cancel Order Item',
          html: `<p style="margin-bottom: 15px;"><strong>${itemName}</strong></p>`,
          input: 'select',
          inputOptions: CANCEL_REASONS,
          inputPlaceholder: 'Select a reason (optional)',
          showCancelButton: true,
          confirmButtonText: 'Confirm Cancel',
          cancelButtonText: 'Close',
          confirmButtonColor: '#d33',
          cancelButtonColor: '#6c757d',
          customClass: {
            popup: 'swal-responsive'
          }
        });

        if (!isConfirmed) return;

        try {
          const res = await fetch(`/orders/cancel-item/${itemId}`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              reason: reason || 'No reason provided'
            })
          });

          const result = await res.json();

          if (result.success) {
            const itemRow = btn.closest('.item-row');

            if (itemRow) {
              const statusBadge = itemRow.querySelector('.status-badge');

              if (statusBadge) {
                statusBadge.textContent = 'Cancelled';
                statusBadge.className = 'status-badge status-cancelled';
              }
            }

            btn.disabled = true;
            btn.classList.add('faded');

            Swal.fire({
              icon: 'success',
              title: 'Item Cancelled',
              text: 'Your item was cancelled successfully.',
              timer: 2000,
              showConfirmButton: false,
              customClass: {
                popup: 'swal-responsive'
              }
            });
          } else {
            Swal.fire('Error', result.message || 'Failed to cancel item', 'error');
          }
        } catch (error) {
          console.error('Fetch error:', error);
          Swal.fire('Error', 'Something went wrong.', 'error');
        }
      });
    });

    document.querySelectorAll('.btn-return').forEach((btn) => {
      btn.addEventListener('click', async () => {
        const itemId = btn.dataset.itemId;
        const itemName = btn.dataset.itemName;

        if (!itemId) {
          return Swal.fire('Error', 'Item ID not found. Cannot process return.', 'error');
        }

        const {
          value: reason,
          isConfirmed
        } = await Swal.fire({
          title: 'Return Item Request',
          html: `<p style="margin-bottom: 15px;"><strong>${itemName}</strong></p>
                           <p style="margin-bottom: 15px; font-size: 14px; color: #666;">Please select a reason for returning this item:</p>`,
          input: 'select',
          inputOptions: RETURN_REASONS,
          inputPlaceholder: 'Select a reason',
          showCancelButton: true,
          confirmButtonText: 'Continue',
          cancelButtonText: 'Cancel',
          confirmButtonColor: '#d33',
          cancelButtonColor: '#6c757d',
          inputValidator: (value) => {
            if (!value) {
              return 'Please select a reason for return';
            }
          },
          customClass: {
            popup: 'swal-responsive'
          }
        });

        if (!isConfirmed) return;

        let finalReason = RETURN_REASONS[reason];

        if (reason === 'other') {
          const {
            value: customReason,
            isConfirmed: detailsConfirmed
          } = await Swal.fire({
            title: 'Specify Return Reason',
            html: '<p style="margin-bottom: 10px;">Please provide details about your return reason:</p>',
            input: 'textarea',
            inputPlaceholder: 'Describe the issue...',
            showCancelButton: true,
            confirmButtonText: 'Submit Return Request',
            cancelButtonText: 'Back',
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6c757d',
            inputValidator: (value) => {
              if (!value || value.trim().length < 10) {
                return 'Please provide at least 10 characters describing the issue';
              }
            },
            customClass: {
              popup: 'swal-responsive'
            }
          });

          if (!detailsConfirmed) return;
          finalReason = customReason.trim();
        } else {
          const confirmed = await Swal.fire({
            title: 'Confirm Return Request',
            html: `<p><strong>Item:</strong> ${itemName}</p>
                               <p><strong>Reason:</strong> ${finalReason}</p>
                               <p style="margin-top: 15px; font-size: 14px; color: #666;">
                                   Your return request will be reviewed by our team. You'll be notified once it's processed.
                               </p>`,
            icon: 'question',
            iconColor: '#088178',
            showCancelButton: true,
            confirmButtonText: 'Submit Return Request',
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6c757d',
            customClass: {
              popup: 'swal-responsive'
            }
          });

          if (!confirmed.isConfirmed) return;
        }

        try {
          const res = await fetch('/orders/return-item', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              orderId: '<%= order._id %>',
              itemId: itemId,
              reason: finalReason
            })
          });

          const result = await res.json();

          if (result.success) {
            const itemRow = btn.closest('.item-row');

            if (itemRow) {
              const statusBadge = itemRow.querySelector('.status-badge');

              btn.style.display = 'none';

              const itemActions = itemRow.querySelector('.item-actions');
              if (itemActions && !itemActions.querySelector('.return-status')) {
                const returnStatusDiv = document.createElement('div');
                returnStatusDiv.className = 'return-status';
                returnStatusDiv.innerHTML = '<span class="return-requested return-requested">Refund Requested</span>';
                itemActions.insertBefore(returnStatusDiv, btn);
              }
            }

            Swal.fire({
              icon: 'success',
              title: 'Return Request Submitted',
              html: `<p>Your return request for <strong>${itemName}</strong> has been submitted successfully.</p>
                                   <p style="margin-top: 10px; font-size: 14px; color: #666;">
                                       You'll receive an update within 24-48 hours.
                                   </p>`,
              confirmButtonText: 'OK',
              confirmButtonColor: '#28a745',
              customClass: {
                popup: 'swal-responsive'
              }
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Return Request Failed',
              text: result.message || 'Unable to submit return request. Please try again.',
              confirmButtonColor: '#dc3545'
            });
          }
        } catch (error) {
          console.error('Return request error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Network Error',
            text: 'Something went wrong. Please check your connection and try again.',
            confirmButtonColor: '#dc3545'
          });
        }
      });
    });


    async function retryPayment(orderId) {
      const swalOpts = { customClass: { popup: 'compact-alert' } };

      try {
        Swal.fire({
          title: 'Processing...',
          text: 'Creating payment order',
          allowOutsideClick: false,
          showConfirmButton: false,
          willOpen: () => Swal.showLoading(),
          ...swalOpts
        });

        const orderRes = await fetch(`/orders/retry-payment/${orderId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });

        let orderData;
        try {
          orderData = await orderRes.json();
        } catch (parseErr) {
          console.error('Failed to parse /orders/retry-payment response', parseErr);
          Swal.close();
          return Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Invalid response from server. Check console/network tab.',
            ...swalOpts
          });
        }

        Swal.close();

        if (!orderRes.ok || !orderData.success) {
          console.error('Retry-payment failed:', {
            status: orderRes.status,
            body: orderData
          });

          return Swal.fire({
            icon: 'error',
            title: 'Error',
            text: orderData?.message || 'Failed to create payment order.',
            ...swalOpts
          });
        }

        const razorpayAmount = orderData.amount;

        sessionStorage.setItem(
          'failedOrderDetails',
          JSON.stringify({
            orderId,
            amount: orderData.amount / 100,
            razorpayOrderId: orderData.razorpayOrderId
          })
        );

        const options = {
          key: orderData.key,
          amount: razorpayAmount,
          currency: 'INR',
          order_id: orderData.razorpayOrderId,
          name: 'Kaizen Street',
          description: 'Order Payment Retry',
          image: '/assets2/imgs/theme/kaizenicon.svg',

          method: {
            netbanking: true,
            card: false,
            wallet: false,
            upi: false,
            paylater: false,
            emi: false
          },

          handler: async function (response) {
            Swal.fire({
              title: 'Verifying Payment...',
              text: 'Please wait while we confirm your payment',
              allowOutsideClick: false,
              showConfirmButton: false,
              willOpen: () => Swal.showLoading(),
              ...swalOpts
            });

            try {
              const verifyData = {
                razorpay_payment_id: response.razorpay_payment_id,
                razorpay_order_id: response.razorpay_order_id,
                razorpay_signature: response.razorpay_signature,
                orderId
              };

              const verifyRes = await fetch('/orders/verify-retry-payment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(verifyData)
              });

              const verifyResponseData = await verifyRes.json();
              Swal.close();

              if (verifyRes.ok && verifyResponseData.success) {
                sessionStorage.removeItem('failedOrderDetails');
                await Swal.fire({
                  icon: 'success',
                  title: 'Payment Successful!',
                  text: 'Your payment has been processed successfully.',
                  showConfirmButton: false,
                  timer: 2000,
                  customClass: {
                    popup: 'swal-responsive'
                  }
                });
                window.location.href = `/checkout/order-success/${orderId}`;
              } else {
                console.error('verify-retry-payment failure:', verifyResponseData);
                return Swal.fire({
                  icon: 'error',
                  title: 'Verification Failed',
                  text: verifyResponseData.message || 'Payment verification failed',
                  ...swalOpts
                });
              }
            } catch (error) {
              console.error('Payment verification error:', error);
              Swal.close();
              Swal.fire({
                icon: 'error',
                title: 'Verification Error',
                text: 'Something went wrong during verification',
                ...swalOpts
              });
            }
          },
          modal: {
            ondismiss: function () {
              Swal.fire({
                icon: 'info',
                title: 'Payment Cancelled',
                text: 'You can retry the payment anytime from your order details.',
                ...swalOpts
              });
            }
          },
          theme: { color: '#3399cc' },
          retry: { enabled: true, max_count: 3 },
          timeout: 600,
          remember_customer: false
        };

        const rzp = new Razorpay(options);

        rzp.on('payment.failed', function (response) {
          console.error('Payment failed event:', response);
          Swal.fire({
            icon: 'error',
            title: 'Payment Failed',
            text: response?.error?.description || 'Payment could not be processed',
            confirmButtonText: 'Try Again',
            showCancelButton: true,
            cancelButtonText: 'Close',
            ...swalOpts
          }).then((result) => {
            if (result.isConfirmed) retryPayment(orderId);
          });
        });

        rzp.open();
      } catch (err) {
        console.error('Retry payment error (outer):', err);
        Swal.close();
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: err?.message || 'Something went wrong. Please try again.',
          ...swalOpts
        });
      }
    }
  </script>

</body>
</html>