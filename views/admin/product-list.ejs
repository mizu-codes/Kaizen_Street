<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <title>Kaizen Product List</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="shortcut icon" type="image/x-icon" href="/assets2/imgs/theme/kaizenicon.svg">
  <link href="/assets2/css/main.css" rel="stylesheet" type="text/css" />

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
  <style>
    /* Base Layout & Container */
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 15px;
    }

    /* Content Header */
    .content-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 2px solid #f0f0f0;
    }

    .content-title {
      font-size: 1.75rem;
      font-weight: 600;
      color: #333;
      margin: 0;
    }

    /* Submenu Navigation */
    .submenu {
      margin-bottom: 1rem;
      padding: 0.75rem 0;
      border-bottom: 1px solid #e9ecef;
    }

    .submenu a {
      color: white;
      text-decoration: none;
      font-weight: 500;
      background-color: #6c63ff;
      padding: 0.5rem 1rem;
      border-radius: 6px;
      transition: all 0.3s ease;
      margin-right: 1rem;
      margin-top: 1rem;
      box-shadow: 0 8px 12px rgba(2, 1, 13, 0.531);
    }

    /* Search & Filter Form */
    .search-filter-form {
      background: #f8f9fa;
      padding: 1.5rem;
      border-radius: 12px;
      margin-bottom: 2rem;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .search-filter-form .form-control,
    .search-filter-form .form-select {
      border: 2px solid #e9ecef;
      border-radius: 8px;
      padding: 0.75rem 1rem;
      transition: all 0.3s ease;
    }

    .search-filter-form .form-control:focus,
    .search-filter-form .form-select:focus {
      border-color: #6c63ff;
      box-shadow: 0 0 0 0.2rem rgba(108, 99, 255, 0.25);
    }

    .search-filter-form .btn-primary {
      background: linear-gradient(135deg, #6c63ff, #8f94fb);
      border: none;
      padding: 0.75rem 2rem;
      border-radius: 8px;
      font-weight: 600;
      transition: all 0.3s ease;
    }

    .search-filter-form .btn-primary:hover {
      background: linear-gradient(135deg, #5a52e6, #7d84f2);
      transform: translateY(-2px);
      box-shadow: 0 6px 12px rgba(108, 99, 255, 0.3);
    }

    /* Table Wrapper & Styling */
    .table-wrap {
      overflow-x: auto;
      background: white;
      border-radius: 12px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
      margin-bottom: 2rem;
    }

    .table-custom {
      margin-bottom: 0;
      font-size: 0.9rem;
      min-width: 1000px;
      /* Ensure minimum width for all columns */
    }

    .table-custom th {
      background: linear-gradient(90deg, #6c63ff, #8f94fb);
      color: #fff;
      border: none;
      padding: 0.2rem 0.55rem;
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.8rem;
      letter-spacing: 0.5px;
      position: sticky;
      top: 0;
      z-index: 10;
    }

    .table-custom tbody tr {
      transition: all 0.3s ease;
      border-bottom: 1px solid #f0f0f0;
    }

    .table-custom tbody tr:hover {
      background-color: #f8f9ff;
      transform: scale(1.01);
      box-shadow: 0 2px 8px rgba(108, 99, 255, 0.1);
    }

    .table-custom td {
      padding: 0.2rem 0.75rem;
      vertical-align: middle;
      border: none;
    }

    /* Price Column Styling */
    .price-column {
      min-width: 120px;
    }

    .original-price {
      font-weight: 600;
      color: #333;
    }

    .discount-price {
      color: #28a745;
      font-weight: 600;
      font-size: 0.9em;
    }

    .discount-badge {
      background: linear-gradient(135deg, #ff6b6b, #ff8e8e);
      color: white;
      font-size: 0.7rem;
      padding: 0.2rem 0.5rem;
      border-radius: 12px;
      font-weight: 600;
    }

    /* Status Badges */
    .badge {
      padding: 0.5rem 0.75rem;
      border-radius: 20px;
      font-size: 0.75rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .badge.bg-success {
      background: linear-gradient(135deg, #28a745, #20c997) !important;
      color: white;
    }

    .badge.bg-danger {
      background: linear-gradient(135deg, #dc3545, #e74c3c) !important;
      color: white;
    }

    /* Action Buttons */
    .btn-sm {
      font-size: 0.75rem;
      padding: 0.4rem 0.8rem;
      border-radius: 6px;
      font-weight: 500;
      transition: all 0.3s ease;
      margin: 0 0.2rem;
    }

    .btn-outline-primary {
      border-color: #6c63ff;
      color: #6c63ff;
    }

    .btn-outline-primary:hover {
      background-color: #6c63ff;
      border-color: #6c63ff;
      color: white;
      transform: translateY(-1px);
      box-shadow: 0 4px 8px rgba(108, 99, 255, 0.3);
    }

    .btn-outline-success {
      border-color: #28a745;
      color: #28a745;
    }

    .btn-outline-success:hover {
      background-color: #28a745;
      border-color: #28a745;
      color: white;
      transform: translateY(-1px);
      box-shadow: 0 4px 8px rgba(40, 167, 69, 0.3);
    }

    .btn-outline-danger {
      border-color: #dc3545;
      color: #dc3545;
    }

    .btn-outline-danger:hover {
      background-color: #dc3545;
      border-color: #dc3545;
      color: white;
      transform: translateY(-1px);
      box-shadow: 0 4px 8px rgba(220, 53, 69, 0.3);
    }

    /* Pagination */
    .pagination {
      margin-top: 2rem;
    }

    .pagination .page-link {
      color: #6c63ff;
      border-radius: 8px;
      border: 2px solid #6c63ff;
      margin: 0 4px;
      padding: 0.45rem 0.9rem;
      font-weight: 500;
      transition: all 0.3s ease;
      text-decoration: none;
    }

    .pagination .page-link:hover {
      background-color: #6c63ff;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(108, 99, 255, 0.3);
    }

    .pagination .page-item.active .page-link {
      background-color: #6c63ff;
      border-color: #6c63ff;
      color: white;
      box-shadow: 0 4px 8px rgba(108, 99, 255, 0.3);
    }

    .pagination .page-item.disabled .page-link {
      color: #aaa;
      border-color: #ddd;
      background-color: #f9f9f9;
      cursor: not-allowed;
    }

    .pagination .page-item.disabled .page-link:hover {
      transform: none;
      box-shadow: none;
    }

    /* Modal Enhancements */
    .modal-dialog {
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      max-width: 900px;
      /* Larger modal for images */
    }

    .modal-content {
      border: none;
      border-radius: 16px;
      overflow: hidden;
    }

    .modal-header {
      background: linear-gradient(135deg, #6c63ff, #8f94fb);
      color: white;
      padding: 1.5rem;
      border-bottom: none;
    }

    .modal-title {
      font-weight: 600;
      margin: 0;
    }

    .btn-close {
      filter: invert(1);
      opacity: 0.8;
    }

    .btn-close:hover {
      opacity: 1;
    }

    .modal-body {
      padding: 2rem;
      max-height: 70vh;
      overflow-y: auto;
    }

    .modal-footer {
      padding: 1.5rem 2rem;
      border-top: 1px solid #e9ecef;
      background-color: #f8f9fa;
    }

    /* Form Controls in Modal */
    .modal-body .form-label {
      font-weight: 600;
      color: #495057;
      margin-bottom: 0.5rem;
    }

    .modal-body .form-control,
    .modal-body .form-select {
      border: 2px solid #e9ecef;
      border-radius: 8px;
      padding: 0.75rem 1rem;
      transition: all 0.3s ease;
    }

    .modal-body .form-control:focus,
    .modal-body .form-select:focus {
      border-color: #6c63ff;
      box-shadow: 0 0 0 0.2rem rgba(108, 99, 255, 0.25);
    }

    /* Image Upload Section */
    .image-upload-section {
      background: #f8f9fa;
      border-radius: 12px;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .image-upload-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
      margin-top: 1rem;
    }

    .image-upload-item {
      border: 2px dashed #dee2e6;
      border-radius: 8px;
      padding: 1rem;
      text-align: center;
      transition: all 0.3s ease;
      position: relative;
    }

    .image-upload-item:hover {
      border-color: #6c63ff;
      background-color: rgba(108, 99, 255, 0.05);
    }

    .image-upload-item.has-image {
      border-style: solid;
      border-color: #28a745;
    }

    .image-preview {
      width: 100%;
      height: 150px;
      object-fit: cover;
      border-radius: 6px;
      margin-bottom: 0.5rem;
    }

    .image-upload-input {
      position: absolute;
      opacity: 0;
      width: 100%;
      height: 100%;
      cursor: pointer;
    }

    .image-upload-label {
      display: block;
      cursor: pointer;
      font-size: 0.9rem;
      color: #6c757d;
      margin-bottom: 0.5rem;
    }

    .image-remove-btn {
      position: absolute;
      top: 0.5rem;
      right: 0.5rem;
      width: 24px;
      height: 24px;
      border-radius: 50%;
      background: #dc3545;
      color: white;
      border: none;
      font-size: 0.7rem;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    /* Discount Pricing Section */
    .pricing-section {
      background: #f8f9fa;
      border-radius: 12px;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .price-calculator {
      background: white;
      padding: 1rem;
      border-radius: 8px;
      margin-top: 1rem;
      border: 1px solid #e9ecef;
    }

    .price-display {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.75rem;
      background: #f8f9fa;
      border-radius: 6px;
      margin-top: 0.5rem;
    }

    .discount-preview {
      color: #28a745;
      font-weight: 600;
    }

    /* Alert Messages */
    .alert {
      border: none;
      border-radius: 12px;
      padding: 1rem 1.5rem;
      margin-bottom: 1.5rem;
      font-weight: 500;
    }

    .alert-success {
      background: linear-gradient(135deg, rgba(40, 167, 69, 0.1), rgba(32, 201, 151, 0.1));
      color: #155724;
      border-left: 4px solid #28a745;
    }

    .alert-danger {
      background: linear-gradient(135deg, rgba(220, 53, 69, 0.1), rgba(231, 76, 60, 0.1));
      color: #721c24;
      border-left: 4px solid #dc3545;
    }

      .crop-btn {
            position: absolute;
            top: 5px;
            left: 5px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            font-size: 12px;
            cursor: pointer;
        }
        
        .crop-btn:hover {
            background: #0056b3;
        }
        
        .crop-modal .modal-dialog {
            max-width: 90vw;
            max-height: 90vh;
        }
        
        .crop-container {
            max-height: 60vh;
            overflow: hidden;
        }
        
        .crop-container img {
            max-width: 100%;
        }
        
        .crop-controls {
            display: flex;
            gap: 10px;
            margin-top: 15px;
            flex-wrap: wrap;
        }
        
        .aspect-ratio-btn {
            padding: 5px 10px;
            border: 1px solid #dee2e6;
            background: white;
            border-radius: 4px;
            cursor: pointer;
            font-size: 12px;
        }
        
        .aspect-ratio-btn.active {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }
        
        .savings-display {
            color: #28a745;
            font-weight: bold;
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }

    /* Responsive Design */
    @media (max-width: 768px) {
      .content-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
      }

      .table-wrap {
        font-size: 0.8rem;
      }

      .btn-sm {
        font-size: 0.7rem;
        padding: 0.3rem 0.6rem;
        margin: 0.1rem;
      }

      .pagination .page-link {
        padding: 0.5rem 0.75rem;
        font-size: 0.8rem;
      }

      .modal-body {
        padding: 1rem;
      }

      .search-filter-form {
        padding: 1rem;
      }

      .image-upload-grid {
        grid-template-columns: 1fr;
      }
    }

    @media (max-width: 576px) {

      .table-custom th,
      .table-custom td {
        padding: 0.5rem 0.25rem;
      }

      .pagination .page-link {
        margin: 0 1px;
        padding: 0.4rem 0.6rem;
      }
    }

    /* Loading States */
    .table-custom tbody tr.loading {
      opacity: 0.6;
      pointer-events: none;
    }

    /* Hover Effects for Interactive Elements */
    .submenu a,
    .btn,
    .page-link {
      cursor: pointer;
    }

    /* Focus States for Accessibility */
    .btn:focus,
    .form-control:focus,
    .form-select:focus,
    .page-link:focus {
      outline: none;
      box-shadow: 0 0 0 0.2rem rgba(108, 99, 255, 0.25);
    }

    /* Smooth Transitions */
    * {
      transition: all 0.3s ease;
    }

    /* Custom Scrollbar for Table */
    .table-wrap::-webkit-scrollbar {
      height: 8px;
    }

    .table-wrap::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 4px;
    }

    .table-wrap::-webkit-scrollbar-thumb {
      background: #6c63ff;
      border-radius: 4px;
    }

    .table-wrap::-webkit-scrollbar-thumb:hover {
      background: #5a52e6;
    }
  </style>
</head>

<body>

  <aside class="navbar-aside" id="offcanvas_aside">
    <div class="aside-top">
      <a href="/admin" class="brand-wrap">
        <img src="/assets2/imgs/theme/kaizenlogoo.svg" class="logo" alt="Kaizen Dashboard">
      </a>
      <div>
        <button class="btn btn-icon btn-aside-minimize">
          <i class="text-muted material-icons md-menu_open"></i>
        </button>
      </div>
    </div>
    <nav>
      <ul class="menu-aside">
        <li class="menu-item">
          <a class="menu-link" href="/admin">
            <i class="icon material-icons md-home"></i>
            <span class="text">Dashboard</span>
          </a>
        </li>
        <li class="menu-item active">
          <a class="menu-link" href="/admin/user">
            <i class="icon material-icons md-person"></i>
            <span class="text">Product List</span>
          </a>
        </li>
      </ul>
    </nav>
  </aside>

  <main class="main-wrap">
    <header class="main-header navbar">
      <form class="row d-flex" method="GET" action="/admin/products">
        <div class="col-auto">
          <input type="text" name="search" value="<%= search %>" class="form-control " placeholder="Search…" />
        </div>
        <div class="col-auto">
          <select name="limit" class="form-select">
            <% [5, 10, 20, 50].forEach(n=> { %>
              <option value="<%= n %>" <%=limit===n ? "selected" : "" %>>
                <%= n %>/page
              </option>
              <% }) %>
          </select>
        </div>
        <div class="col-auto">
          <button class="btn btn-primary">Go</button>
          <% if (search) { %>
        <a href="?page=1&limit=<%= limit %>" class="btn btn-light border ms-2">Clear</a>
         <% } %>
        </div>
      </form>
    </header>

    <section class="content-main">
      <div class="content-header d-flex justify-content-between align-items-center mb-4">
        <h2 class="content-title card-title">Product Management</h2>
        <div class="submenu mb-3">
          <a href="/admin/addProducts">Product Add</a>
        </div>
      </div>

      <div class="container">
        <% if (message || error) { %>
          <div class="d-flex justify-content-center mt-3">
            <% if (message) { %>
              <div class="alert alert-success text-center px-3 py-2" style="font-size: 0.8rem; max-width: 320px;">
                <%= message %>
              </div>
              <% } %>
                <% if (error) { %>
                  <div class="alert alert-danger text-center px-3 py-2" style="font-size: 0.8rem; max-width: 320px;">
                    <%= error %>
                  </div>
                  <% } %>
          </div>
          <% } %>

            <div class="table-wrap">
              <table class="table table-custom align-middle mb-0">
                <thead>
                  <tr>
                    <th>#</th>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Regular Price</th>
                    <th>Discount %</th>
                    <th>Discount Price</th>
                    <th>Stock</th>
                    <th>Size</th>
                    <th>Status</th>
                    <th>List</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody data-page="<%= currentPage %>" data-limit="<%= limit %>" data-search="<%= search %>">
                  <% products.forEach((p, i)=> { %>
                    <tr data-id="<%= p._id %>" data-name="<%= p.productName.replace(/" /g, '&quot;' ) %>"
                      data-description="<%= (p.description||'').replace(/"/g,'&quot;') %>"
                        data-price="<%= p.regularPrice %>"
                        data-discount-percent="<%= p.productOffer||0 %>"
                            data-discount-price="<%= p.discountPrice||p.regularPrice %>"
                              data-category="<%= p.category?._id||'' %>"
                                data-stock="<%= p.stock %>"
                                  data-size="<%= p.size %>"
                                    data-status="<%= p.status %>"
                                      data-specifications="<%= (p.specifications||'').replace(/"/g,'&quot;') %>"
                                      data-images='<%- JSON.stringify(p.productImage || []) %>'
                                        >
                                        <td>
                                          <%= (currentPage - 1) * limit + i + 1 %>
                                        </td>
                                        <td>
                                          <%= p.productName %>
                                        </td>
                                        <td>
                                          <%= p.category?.categoryName || '—' %>
                                        </td>
                                        <td class="price-column">₹ <%= p.regularPrice.toFixed(2) %>
                                        </td>
                                        <td>
                                          <% const discountNum=parseFloat(p.productOffer) || 0; %>
                                            <% if (discountNum> 0) { %>
                                              <span class="discount-badge">
                                                <%= discountNum %>% OFF
                                              </span>
                                              <% } else { %>—<% } %>
                                        </td>
                                        <td class="price-column">
                                          <% if (typeof p.discountPrice==='number' ) { %>
                                            ₹ <%= p.discountPrice.toFixed(2) %>
                                              <% } else { %>—<% } %>
                                        </td>
                                        <td>
                                          <%= p.stock %>
                                        </td>
                                        <td>
                                          <% if (Array.isArray(p.size)) { %>
                                            <%= p.size.join(', ') %>
                                          <% } else { %>
                                              <%= p.size %>
                                                <% } %>
                                            </td>
                                        <td>
                                          <%= p.status %>
                                        </td>
                                        <td>
                                          <% if (p.isBlocked) { %>
                                            <span class="badge bg-danger">Not Listed</span>
                                            <% } else { %>
                                              <span class="badge bg-success">Listed</span>
                                              <% } %>
                                        </td>
                                        <td>
                                          <div class="d-flex align-items-center">
                                            <button class="btn btn-sm btn-outline-primary btn-edit"
                                              data-bs-toggle="modal" data-bs-target="#editProductModal">
                                              Edit
                                            </button>

                                            <form method="POST"
                                              action="/admin/products/block/<%= p._id %>?page=<%= currentPage %>&limit=<%= limit %>&search=<%= search %>"
                                              class="ms-2 mb-0">
                                              <button
                                                class="btn btn-sm btn-outline-<%= p.isBlocked ? ' success' : 'danger'
                                              %>">
                                              <%= p.isBlocked ? 'Unblock' : 'Block' %>
                                                </button>
                                                </form>
            </div>
            </td>
            </tr>
            <% }) %>
              </tbody>
              </table>
      </div>

    
      <nav>
        <ul class="pagination justify-content-center mt-4">
          <li class="page-item <%= currentPage === 1 ? " disabled" : "" %>">
            <a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>&search=<%= search %>">&laquo;</a>
          </li>
          <% for (let p=1; p <=totalPages; p++) { %>
            <li class="page-item <%= currentPage === p ? " active" : "" %>">
              <a class="page-link" href="?page=<%= p %>&limit=<%= limit %>&search=<%= search %>">
                <%= p %>
              </a>
            </li>
            <% } %>
              <li class="page-item <%= currentPage === totalPages ? " disabled" : "" %>">
                <a class="page-link"
                  href="?page=<%= currentPage + 1 %>&limit=<%= limit %>&search=<%= search %>">&raquo;</a>
              </li>
        </ul>
      </nav>
      </div>

      
      <div class="modal fade" id="editProductModal" tabindex="-1">
        <div class="modal-dialog modal-xl">
          <form id="editProductForm" method="POST" class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Edit Product</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
            
              <div class="image-upload-section">
                <h6 class="mb-3">Product Images</h6>
                <div class="image-upload-grid">
             
                  <div class="image-upload-item" id="imageItem1">
                    <input type="file" name="productImages" class="image-upload-input" id="imageInput1"
                      accept="image/*">
                    <label for="imageInput1" class="image-upload-label">
                      <div class="upload-placeholder">
                        <i class="material-icons" style="font-size: 2rem; color: #6c757d;"></i>
                        <div>Click to upload image 1</div>
                      </div>
                    </label>
                    <img class="image-preview" id="imagePreview1" style="display: none;">
                    <button type="button" class="image-remove-btn" id="removeBtn1" style="display: none;">×</button>
                      <button type="button" class="crop-btn" id="cropBtn1" style="display: none;">Crop</button>
                                <button type="button" class="image-remove-btn" id="removeBtn1" style="display: none;">×</button>
                  </div>

              
                  <div class="image-upload-item" id="imageItem2">
                    <input type="file" name="productImages" class="image-upload-input" id="imageInput2"
                      accept="image/*">
                    <label for="imageInput2" class="image-upload-label">
                      <div class="upload-placeholder">
                        <i class="material-icons" style="font-size: 2rem; color: #6c757d;"></i>
                        <div>Click to upload image 2</div>
                      </div>
                    </label>
                    <img class="image-preview" id="imagePreview2" style="display: none;">
                           <button type="button" class="crop-btn" id="cropBtn2" style="display: none;">Crop</button>
                                <button type="button" class="image-remove-btn" id="removeBtn2" style="display: none;">×</button>
                  </div>

                
                  <div class="image-upload-item" id="imageItem3">
                    <input type="file" name="productImages" class="image-upload-input" id="imageInput3"
                      accept="image/*">
                    <label for="imageInput3" class="image-upload-label">
                      <div class="upload-placeholder">
                        <i class="material-icons" style="font-size: 2rem; color: #6c757d;"></i>
                        <div>Click to upload image 3</div>
                      </div>
                    </label>
                    <img class="image-preview" id="imagePreview3" style="display: none;">
                            <button type="button" class="crop-btn" id="cropBtn3" style="display: none;">Crop</button>
                                <button type="button" class="image-remove-btn" id="removeBtn3" style="display: none;">×</button>
                  </div>
                </div>
              
                <input type="hidden" name="imageBase64_1" id="imageBase64_1">
                <input type="hidden" name="imageBase64_2" id="imageBase64_2">
                <input type="hidden" name="imageBase64_3" id="imageBase64_3">

              
                <div class="row mb-4">
                  <div class="col-md-6">
                    <label class="form-label">Product Name</label>
                    <input type="text" name="productName" id="editName" class="form-control" required />
                  </div>
                  <div class="col-md-6">
                    <label class="form-label">Category</label>
                    <select name="category" id="editCategory" class="form-select" required>
                      <% categories.forEach(cat=> { %>
                        <option value="<%= cat._id %>">
                          <%= cat.categoryName %>
                        </option>
                        <% }) %>
                    </select>
                  </div>
                </div>

                
                <div class="mb-4">
                  <label class="form-label">Description</label>
                  <textarea name="description" id="editDesc" class="form-control" rows="3"></textarea>
                </div>

          
<div class="mb-4">
  <label class="form-label">Specifications</label>
<textarea
    name="specifications"
    id="editSpecifications"
    class="form-control"
    rows="5"
    placeholder="Enter one spec per line, e.g.&#10;Composition: 100% cotton&#10;GSM: 220"
  ></textarea>
  <small class="form-text text-muted">
    Each new line will become a bullet on the product page.
  </small>
</div>


               
                <div class="pricing-section">
                  <h6 class="mb-3">Pricing Information</h6>
                  <div class="row">
                    <div class="col-md-4">
                      <label class="form-label">Regular Price (₹)</label>
                      <input type="number" step="0.01" name="regularPrice" id="editPrice" class="form-control" required
                        oninput="calculateDiscount()" />
                    </div>
                   <div class="col-md-4">
  <label class="form-label">Discount Percentage (%)</label>
  <input type="number" step="0.01" name="productOffer" id="editDiscountPercent"
    class="form-control" min="0" max="100" oninput="calculateDiscount()" />
</div>
                    <div class="col-md-4">
                      <label class="form-label">Discount Price (₹)</label>
                      <input type="number" step="0.01" name="discountPrice" id="editDiscountPrice" class="form-control"
                        readonly />
                    </div>
                  </div>
                  <div class="price-calculator">
                    <div class="price-display">
                      <span>Calculated Savings:</span>
                      <span class="discount-preview" id="savingsAmount">₹ 0.00</span>
                    </div>
                  </div>
                </div>

                <div class="row mb-4">
                  <div class="col-md-4">
                    <label class="form-label">Stock Quantity</label>
                    <input type="number" name="stock" id="editStock" class="form-control" required min="0" />
                  </div>
                  <div class="col-md-4">
                    <label class="form-label">Size</label>
                    <select name="size" id="editSize" class="form-select" required>
                      <option value="S">Small (S)</option>
                      <option value="M">Medium (M)</option>
                      <option value="L">Large (L)</option>
                      <option value="XL">Extra Large (XL)</option>
                      <option value="XXL">Double XL (XXL)</option>
                    </select>
                  </div>
                  <div class="col-md-4">
                    <label class="form-label">Status</label>
                    <select name="status" id="editStatus" class="form-select" required>
                      <option value="active">Active</option>
                      <option value="inactive">Inactive</option>
                    </select>
                  </div>
                </div>
                </div>
                </div>
                 <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Product</button>
                </div>
            </form>
        </div>
    </div>

    <div class="modal fade crop-modal" id="cropModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Crop Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="crop-container">
                        <img id="cropImage" style="max-width: 100%;">
                    </div>
                    <div class="crop-controls">
                        <button type="button" class="btn btn-sm btn-outline-secondary" id="resetCrop">Reset</button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="applyCrop">Apply Crop</button>
                </div>
            </div>
        </div>
    </div>
      
    
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
     
      <script>
            let currentCropper = null;
        let currentImageIndex = null;
        let originalImageData = null;
        
        function calculateDiscount() {
            const regularPrice = parseFloat(document.getElementById('editPrice').value) || 0;
            const discountPercent = parseFloat(document.getElementById('editDiscountPercent').value) || 0;

            if (regularPrice > 0 && discountPercent > 0) {
                const discountAmount = (regularPrice * discountPercent) / 100;
                const discountPrice = regularPrice - discountAmount;
                document.getElementById('editDiscountPrice').value = discountPrice.toFixed(2);
                document.getElementById('savingsAmount').textContent = `₹ ${discountAmount.toFixed(2)}`;
            } else {
                document.getElementById('editDiscountPrice').value = regularPrice.toFixed(2);
                document.getElementById('savingsAmount').textContent = '₹ 0.00';
            }
        }
       
        function setupImageUpload(index) {
            const input = document.getElementById(`imageInput${index}`);
            const preview = document.getElementById(`imagePreview${index}`);
            const remove = document.getElementById(`removeBtn${index}`);
            const crop = document.getElementById(`cropBtn${index}`);
            const item = document.getElementById(`imageItem${index}`);
            const label = item.querySelector('.image-upload-label');
            const hiddenInput = document.getElementById(`imageBase64_${index}`);

            input.addEventListener('change', e => {
                const file = e.target.files[0];
                if (!file) return;
              
                if (!file.type.startsWith('image/')) {
                    alert('Please select a valid image file');
                    input.value = '';
                    return;
                }

               
                if (file.size > 5 * 1024 * 1024) {
                    alert('Image size should not exceed 5MB');
                    input.value = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = ev => {
                    const base64Data = ev.target.result;
                    preview.src = base64Data;
                    preview.style.display = 'block';
                    remove.style.display = 'block';
                    crop.style.display = 'block';
                    label.style.display = 'none';
                    item.classList.add('has-image');
                    hiddenInput.value = base64Data;
                    console.log(`Image ${index} loaded, size:`, base64Data.length);
                };
                reader.onerror = () => {
                    alert('Error reading file. Please try again.');
                    input.value = '';
                };
                reader.readAsDataURL(file);
            });

            remove.addEventListener('click', e => {
                e.preventDefault();
                input.value = '';
                preview.src = '';
                preview.style.display = 'none';
                remove.style.display = 'none';
                crop.style.display = 'none';
                label.style.display = 'block';
                item.classList.remove('has-image');
                hiddenInput.value = '';
                console.log(`Image ${index} removed`);
            });
            
            crop.addEventListener('click', e => {
                e.preventDefault();
                if (preview.src) {
                    currentImageIndex = index;
                    originalImageData = hiddenInput.value;
                    openCropModal(preview.src);
                }
            });
           
            preview.addEventListener('click', e => {
                e.preventDefault();
                if (preview.src) {
                    currentImageIndex = index;
                    originalImageData = hiddenInput.value;
                    openCropModal(preview.src);
                }
            });
        }
       
        function openCropModal(imageSrc) {
            const cropImage = document.getElementById('cropImage');
            const cropModal = new bootstrap.Modal(document.getElementById('cropModal'));
            
            cropImage.src = imageSrc;
            cropModal.show();
            
           
            document.getElementById('cropModal').addEventListener('shown.bs.modal', function() {
                if (currentCropper) {
                    currentCropper.destroy();
                }
                
                currentCropper = new Cropper(cropImage, {
                    aspectRatio: NaN, 
                    viewMode: 1,
                    dragMode: 'move',
                    autoCropArea: 0.8,
                    restore: false,
                    guides: true,
                    center: true,
                    highlight: false,
                    cropBoxMovable: true,
                    cropBoxResizable: true,
                    toggleDragModeOnDblclick: false,
                    minContainerWidth: 300,
                    minContainerHeight: 200
                });
            }, { once: true });
        }

        
        document.querySelectorAll('.aspect-ratio-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                document.querySelectorAll('.aspect-ratio-btn').forEach(b => b.classList.remove('active'));
                btn.classList.add('active');
                
                const ratio = btn.dataset.ratio;
                if (currentCropper) {
                    if (ratio === 'free') {
                        currentCropper.setAspectRatio(NaN);
                    } 
                }
            });
        });
      
        document.getElementById('resetCrop').addEventListener('click', () => {
            if (currentCropper) {
                currentCropper.reset();
            }
        });

       
        document.getElementById('applyCrop').addEventListener('click', () => {
            if (currentCropper && currentImageIndex) {
                const canvas = currentCropper.getCroppedCanvas({
                    width: 800,
                    height: 600,
                    minWidth: 256,
                    minHeight: 256,
                    maxWidth: 1200,
                    maxHeight: 1200,
                    fillColor: '#fff',
                    imageSmoothingEnabled: false,
                    imageSmoothingQuality: 'high'
                });

                const croppedBase64 = canvas.toDataURL('image/jpeg', 0.9);
              
                const preview = document.getElementById(`imagePreview${currentImageIndex}`);
                const hiddenInput = document.getElementById(`imageBase64_${currentImageIndex}`);
                
                preview.src = croppedBase64;
                hiddenInput.value = croppedBase64;
                
                bootstrap.Modal.getInstance(document.getElementById('cropModal')).hide();
                
                console.log(`Image ${currentImageIndex} cropped and updated`);
            }
        });
       
        document.getElementById('cropModal').addEventListener('hidden.bs.modal', function() {
            if (currentCropper) {
                currentCropper.destroy();
                currentCropper = null;
            }
            currentImageIndex = null;
            originalImageData = null;
        });
       
        for (let i = 1; i <= 3; i++) {
            setupImageUpload(i);
        }
       
        const editModalEl = document.getElementById('editProductModal');
        editModalEl.addEventListener('shown.bs.modal', event => {
            const btn = event.relatedTarget;
            if (!btn) return;
            
            const tr = btn.closest('tr');
            const imageData = tr.getAttribute('data-images');

            let images = [];
            try {
                images = imageData ? JSON.parse(imageData) : [];
            } catch (e) {
                console.error('Error parsing image data:', e);
                images = [];
            }

            console.log('Loading images for edit:', images);
            
            for (let i = 1; i <= 3; i++) {
                const preview = document.getElementById(`imagePreview${i}`);
                const remove = document.getElementById(`removeBtn${i}`);
                const crop = document.getElementById(`cropBtn${i}`);
                const label = document.querySelector(`#imageItem${i} .image-upload-label`);
                const item = document.getElementById(`imageItem${i}`);
                const base64Input = document.getElementById(`imageBase64_${i}`);
                const fileInput = document.getElementById(`imageInput${i}`);
             
                fileInput.value = '';

                if (images[i - 1] && images[i - 1].trim() !== '') {
                    const imageUrl = images[i - 1];
                    preview.src = imageUrl;
                    preview.style.display = 'block';
                    remove.style.display = 'block';
                    crop.style.display = 'block';
                    label.style.display = 'none';
                    item.classList.add('has-image');
                    base64Input.value = imageUrl;
                    console.log(`Image ${i} loaded:`, imageUrl);
                } else {
                    preview.src = '';
                    preview.style.display = 'none';
                    remove.style.display = 'none';
                    crop.style.display = 'none';
                    label.style.display = 'block';
                    item.classList.remove('has-image');
                    base64Input.value = '';
                    console.log(`Image ${i} slot empty`);
                }
            }
          
            document.getElementById('editName').value = tr.getAttribute('data-name') || '';
            document.getElementById('editDesc').value = tr.getAttribute('data-description') || '';
            document.getElementById('editPrice').value = tr.getAttribute('data-price') || '';
document.getElementById('editDiscountPercent').value = tr.getAttribute('data-product-offer') || '';
            document.getElementById('editDiscountPrice').value = tr.getAttribute('data-discount-price') || '';
            document.getElementById('editStock').value = tr.getAttribute('data-stock') || '';
            document.getElementById('editSize').value = tr.getAttribute('data-size') || '';
            document.getElementById('editStatus').value = tr.getAttribute('data-status') || '';
            document.getElementById('editCategory').value = tr.getAttribute('data-category') || '';
            document.getElementById('editSpecifications').value = tr.getAttribute('data-specifications') || '';
           
            const page = tr.parentElement.getAttribute('data-page') || '1';
            const limit = tr.parentElement.getAttribute('data-limit') || '5';
            const search = encodeURIComponent(tr.parentElement.getAttribute('data-search') || '');
            document.getElementById('editProductForm').action = 
                `/admin/products/edit/${tr.getAttribute('data-id')}?page=${page}&limit=${limit}&search=${search}`;
        
            calculateDiscount();
        });
       
        document.getElementById('editProductForm').addEventListener('submit', e => {
            const regularPrice = parseFloat(document.getElementById('editPrice').value);
            const discountPercent = parseFloat(document.getElementById('editDiscountPercent').value) || 0;
            const stock = parseInt(document.getElementById('editStock').value);

            if (regularPrice <= 0) {
                e.preventDefault();
                alert('Regular price must be greater than 0');
                return;
            }
            if (discountPercent < 0 || discountPercent > 100) {
                e.preventDefault();
                alert('Discount percentage must be between 0 and 100');
                return;
            }
            if (stock < 0) {
                e.preventDefault();
                alert('Stock quantity cannot be negative');
                return;
            }

           
            let hasImage = false;
            for (let i = 1; i <= 3; i++) {
                const hiddenInput = document.getElementById(`imageBase64_${i}`);
                if (hiddenInput && hiddenInput.value && hiddenInput.value.trim() !== '') {
                    hasImage = true;
                    break;
                }
            }

            if (!hasImage) {
                e.preventDefault();
                alert('At least one image is required');
                return;
            }
          
            console.log('Submitting form with image data:');
            for (let i = 1; i <= 3; i++) {
                const hiddenInput = document.getElementById(`imageBase64_${i}`);
                const value = hiddenInput ? hiddenInput.value : '';
                console.log(`Image ${i}:`, value ? (value.startsWith('data:') ? 'NEW_BASE64' : 'EXISTING_URL') : 'EMPTY');
            }

            const submitBtn = e.target.querySelector('button[type="submit"]');
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Updating...';
            }
        });

        document.getElementById('editPrice').addEventListener('input', calculateDiscount);
        document.getElementById('editDiscountPercent').addEventListener('input', calculateDiscount);
        </script>
</body>

</html>